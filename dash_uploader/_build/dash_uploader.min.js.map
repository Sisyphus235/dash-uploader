{"version":3,"sources":["webpack://dash_uploader/webpack/bootstrap","webpack://dash_uploader/external \"PropTypes\"","webpack://dash_uploader/external \"React\"","webpack://dash_uploader/./node_modules/resumablejs/resumable.js","webpack://dash_uploader/./src/lib/components/Upload_ReactComponent.react.js","webpack://dash_uploader/./src/lib/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","window","Resumable","opts","this","version","support","Blob","webkitSlice","mozSlice","slice","$","files","defaults","chunkSize","forceChunkSize","simultaneousUploads","fileParameterName","chunkNumberParameterName","chunkSizeParameterName","currentChunkSizeParameterName","totalSizeParameterName","typeParameterName","identifierParameterName","fileNameParameterName","relativePathParameterName","totalChunksParameterName","throttleProgressCallbacks","query","headers","preprocess","method","uploadMethod","testMethod","prioritizeFirstAndLastChunk","target","testTarget","parameterNamespace","testChunks","generateUniqueIdentifier","getTarget","maxChunkRetries","chunkRetryInterval","undefined","permanentErrors","maxFiles","withCredentials","xhrTimeout","clearInput","chunkFormat","setChunkTypeFromFile","maxFilesErrorCallback","errorCount","getOpt","alert","minFileSize","minFileSizeErrorCallback","file","fileName","$h","formatSize","maxFileSize","maxFileSizeErrorCallback","fileType","fileTypeErrorCallback","$opt","Array","options","each","option","ResumableChunk","fileObj","ResumableFile","resumableObj","events","on","event","callback","push","toLowerCase","fire","args","arguments","length","apply","stopEvent","e","stopPropagation","preventDefault","custom","relativePath","webkitRelativePath","size","replace","contains","array","test","result","toFixed","request","params","separator","indexOf","join","onDrop","dataTransfer","items","loadFiles","processItem","item","path","cb","entry","isFile","isDirectory","File","webkitGetAsEntry","directory","createReader","readEntries","entries","processCallbacks","map","processDirectory","getAsFile","appendFilesFromFileList","fileList","removeFile","filesSkipped","remaining","decreaseReamining","setTimeout","fileTypeFound","index","extension","addFile","uniqueIdentifier","getFromUniqueIdentifier","f","container","srcElement","then","_prevProgress","_pause","_error","chunkEvent","message","abort","chunks","isComplete","abortCount","status","cancel","_chunks","uploadNextChunk","retry","bootstrap","firedRetry","upload","round","Math","ceil","floor","maxOffset","max","offset","progress","ret","error","isUploading","uploading","chunk","outstanding","preprocessState","pause","isPaused","fileObjSize","fileObjType","type","lastProgressCallback","Date","tested","retries","pendingRetry","loaded","startByte","endByte","min","xhr","XMLHttpRequest","testHandler","send","addEventListener","customQuery","k","v","encodeURIComponent","concat","filter","pair","open","timeout","customHeaders","setRequestHeader","preprocessFinished","doneHandler","retryInterval","reduce","func","bytes","data","FormData","append","fr","FileReader","onload","readAsDataURL","readyState","responseText","relative","factor","found","assignBrowse","domNodes","domNode","input","tagName","document","createElement","setAttribute","style","display","opacity","focus","click","appendChild","removeAttribute","fileTypes","assignDrop","unAssignDrop","removeEventListener","num","totalDone","totalSize","addFiles","splice","getSize","handleDropEvent","handleChangeEvent","updateQuery","Upload_ReactComponent","props","state","initialState","toggleHovered","cancelUpload","pauseUpload","startUpload","resumable","setState","ResumableField","Resumablejs","service","filetypes","messageStatus","uploader","disableDragAndDrop","dropZone","fileAddedMessage","showEnabledButtons","onFileAdded","fileServer","fileNameServer","objectServer","JSON","parse","currentFiles","fileNames","setProps","completedMessage","onFileSuccess","parseInt","progressBar","onUploadErrorCallback","console","log","resetBuilder","isHovered","textLabel","startButton","cursor","disabled","className","onClick","cancelButton","pauseButton","completeStyle","activeStyle","defaultStyle","id","disabledInput","disableClass","hoveredClass","uploadingClass","completeClass","ref","node","padding","verticalAlign","lineHeight","width","paddingRight","textAlign","wordWrap","onMouseEnter","onMouseLeave","accept","fileAccept","height","Component","propTypes","PropTypes","number","string","disabledClass","pausedClass","arrayOf","bool","defaultProps","simultaneuosUploads"],"mappings":"iCACE,IAAIA,EAAmB,GAGvB,SAASC,EAAoBC,GAG5B,GAAGF,EAAiBE,GACnB,OAAOF,EAAiBE,GAAUC,QAGnC,IAAIC,EAASJ,EAAiBE,GAAY,CACzCG,EAAGH,EACHI,GAAG,EACHH,QAAS,IAUV,OANAI,EAAQL,GAAUM,KAAKJ,EAAOD,QAASC,EAAQA,EAAOD,QAASF,GAG/DG,EAAOE,GAAI,EAGJF,EAAOD,QA0Df,OArDAF,EAAoBQ,EAAIF,EAGxBN,EAAoBS,EAAIV,EAGxBC,EAAoBU,EAAI,SAASR,EAASS,EAAMC,GAC3CZ,EAAoBa,EAAEX,EAASS,IAClCG,OAAOC,eAAeb,EAASS,EAAM,CAAEK,YAAY,EAAMC,IAAKL,KAKhEZ,EAAoBkB,EAAI,SAAShB,GACX,oBAAXiB,QAA0BA,OAAOC,aAC1CN,OAAOC,eAAeb,EAASiB,OAAOC,YAAa,CAAEC,MAAO,WAE7DP,OAAOC,eAAeb,EAAS,aAAc,CAAEmB,OAAO,KAQvDrB,EAAoBsB,EAAI,SAASD,EAAOE,GAEvC,GADU,EAAPA,IAAUF,EAAQrB,EAAoBqB,IAC/B,EAAPE,EAAU,OAAOF,EACpB,GAAW,EAAPE,GAA8B,iBAAVF,GAAsBA,GAASA,EAAMG,WAAY,OAAOH,EAChF,IAAII,EAAKX,OAAOY,OAAO,MAGvB,GAFA1B,EAAoBkB,EAAEO,GACtBX,OAAOC,eAAeU,EAAI,UAAW,CAAET,YAAY,EAAMK,MAAOA,IACtD,EAAPE,GAA4B,iBAATF,EAAmB,IAAI,IAAIM,KAAON,EAAOrB,EAAoBU,EAAEe,EAAIE,EAAK,SAASA,GAAO,OAAON,EAAMM,IAAQC,KAAK,KAAMD,IAC9I,OAAOF,GAIRzB,EAAoB6B,EAAI,SAAS1B,GAChC,IAAIS,EAAST,GAAUA,EAAOqB,WAC7B,WAAwB,OAAOrB,EAAgB,SAC/C,WAA8B,OAAOA,GAEtC,OADAH,EAAoBU,EAAEE,EAAQ,IAAKA,GAC5BA,GAIRZ,EAAoBa,EAAI,SAASiB,EAAQC,GAAY,OAAOjB,OAAOkB,UAAUC,eAAe1B,KAAKuB,EAAQC,IAGzG/B,EAAoBkC,EAAI,GAIjBlC,EAAoBA,EAAoBmC,EAAI,G,gBClFvChC,EAAOD,QAAUkC,OAAkB,W,cCAnCjC,EAAOD,QAAUkC,OAAc,O,iBCO7C,WACA,aAEE,IAAIC,EAAY,SAASC,GACvB,KAAOC,gBAAgBF,GACrB,OAAO,IAAIA,EAAUC,GAkBvB,GAhBAC,KAAKC,QAAU,EAOfD,KAAKE,UAC0B,oBAAT,MAES,oBAAT,MAEa,oBAAb,WAEJC,KAAKV,UAAUW,cAAeD,KAAKV,UAAUY,WAAYF,KAAKV,UAAUa,QAEtFN,KAAKE,QAAS,OAAM,EAIxB,IAAIK,EAAIP,KACRO,EAAEC,MAAQ,GACVD,EAAEE,SAAW,CACXC,UAAU,QACVC,gBAAe,EACfC,oBAAoB,EACpBC,kBAAkB,OAClBC,yBAA0B,uBAC1BC,uBAAwB,qBACxBC,8BAA+B,4BAC/BC,uBAAwB,qBACxBC,kBAAmB,gBACnBC,wBAAyB,sBACzBC,sBAAuB,oBACvBC,0BAA2B,wBAC3BC,yBAA0B,uBAC1BC,0BAA2B,GAC3BC,MAAM,GACNC,QAAQ,GACRC,WAAW,KACXC,OAAO,YACPC,aAAc,OACdC,WAAY,MACZC,6BAA4B,EAC5BC,OAAO,IACPC,WAAY,KACZC,mBAAmB,GACnBC,YAAW,EACXC,yBAAyB,KACzBC,UAAU,KACVC,gBAAgB,IAChBC,wBAAmBC,EACnBC,gBAAgB,CAAC,IAAK,IAAK,IAAK,IAAK,KACrCC,cAASF,EACTG,iBAAgB,EAChBC,WAAW,EACXC,YAAW,EACXC,YAAY,OACZC,sBAAqB,EACrBC,sBAAsB,SAAUvC,EAAOwC,GACrC,IAAIP,EAAWlC,EAAE0C,OAAO,YACxBC,MAAM,8BAAgCT,EAAW,SAAwB,IAAbA,EAAiB,GAAK,KAAO,gBAE3FU,YAAY,EACZC,yBAAyB,SAASC,EAAML,GACtCE,MAAMG,EAAKC,UAAUD,EAAKjF,KAAM,kDAAoDmF,EAAGC,WAAWjD,EAAE0C,OAAO,gBAAkB,MAE/HQ,iBAAYlB,EACZmB,yBAAyB,SAASL,EAAML,GACtCE,MAAMG,EAAKC,UAAUD,EAAKjF,KAAM,gDAAkDmF,EAAGC,WAAWjD,EAAE0C,OAAO,gBAAkB,MAE7HU,SAAU,GACVC,sBAAuB,SAASP,EAAML,GACpCE,MAAMG,EAAKC,UAAUD,EAAKjF,KAAM,sDAAwDmC,EAAE0C,OAAO,YAAc,OAGnH1C,EAAER,KAAOA,GAAM,GACfQ,EAAE0C,OAAS,SAAS3E,GAClB,IAAIuF,EAAO7D,KAEX,GAAG1B,aAAawF,MAAO,CACrB,IAAIC,EAAU,GAId,OAHAR,EAAGS,KAAK1F,GAAG,SAAS2F,GAClBF,EAAQE,GAAUJ,EAAKZ,OAAOgB,MAEzBF,EAGT,GAAIF,aAAgBK,EAAgB,CAClC,QAA4B,IAAjBL,EAAK9D,KAAKzB,GAAsB,OAAOuF,EAAK9D,KAAKzB,GACrDuF,EAAOA,EAAKM,QAErB,GAAIN,aAAgBO,EAAe,CACjC,QAA4B,IAAjBP,EAAK9D,KAAKzB,GAAsB,OAAOuF,EAAK9D,KAAKzB,GACrDuF,EAAOA,EAAKQ,aAErB,GAAIR,aAAgB/D,EAClB,YAA4B,IAAjB+D,EAAK9D,KAAKzB,GAA6BuF,EAAK9D,KAAKzB,GAC9CuF,EAAKpD,SAASnC,IAQhCiC,EAAE+D,OAAS,GACX/D,EAAEgE,GAAK,SAASC,EAAMC,GACpBlE,EAAE+D,OAAOI,KAAKF,EAAMG,cAAeF,IAErClE,EAAEqE,KAAO,WAGP,IADA,IAAIC,EAAO,GACFhH,EAAE,EAAGA,EAAEiH,UAAUC,OAAQlH,IAAKgH,EAAKH,KAAKI,UAAUjH,IAE3D,IAAI2G,EAAQK,EAAK,GAAGF,cACpB,IAAS9G,EAAE,EAAGA,GAAG0C,EAAE+D,OAAOS,OAAQlH,GAAG,EAChC0C,EAAE+D,OAAOzG,IAAI2G,GAAOjE,EAAE+D,OAAOzG,EAAE,GAAGmH,MAAMzE,EAAEsE,EAAKvE,MAAM,IACxC,YAAbC,EAAE+D,OAAOzG,IAAgB0C,EAAE+D,OAAOzG,EAAE,GAAGmH,MAAM,KAAKH,GAE7C,aAAPL,GAAoBjE,EAAEqE,KAAK,QAASC,EAAK,GAAIA,EAAK,IAC3C,gBAAPL,GAAuBjE,EAAEqE,KAAK,aAKnC,IAAIrB,EAAK,CACP0B,UAAW,SAASC,GAClBA,EAAEC,kBACFD,EAAEE,kBAEJpB,KAAM,SAAS1F,EAAEmG,GACf,QAAsB,IAAZnG,EAAQ,QAChB,IAAK,IAAIT,EAAE,EAAGA,EAAES,EAAEyG,OAAQlH,IAExB,IAAoB,IAAjB4G,EAASnG,EAAET,IAAa,YAG7B,IAAKA,KAAKS,EAER,IAAsB,IAAnBmG,EAAS5G,EAAES,EAAET,IAAa,QAInCsE,yBAAyB,SAASkB,EAAMmB,GACtC,IAAIa,EAAS9E,EAAE0C,OAAO,4BACtB,GAAqB,mBAAXoC,EACR,OAAOA,EAAOhC,EAAMmB,GAEtB,IAAIc,EAAejC,EAAKkC,oBAAoBlC,EAAKC,UAAUD,EAAKjF,KAEhE,OADWiF,EAAKmC,KACF,IAAMF,EAAaG,QAAQ,oBAAqB,KAEhEC,SAAS,SAASC,EAAMC,GACtB,IAAIC,GAAS,EAUb,OARAtC,EAAGS,KAAK2B,GAAO,SAAS7G,GACtB,OAAIA,GAAS8G,IACXC,GAAS,GACF,MAKJA,GAETrC,WAAW,SAASgC,GAClB,OAAGA,EAAK,KACCA,EAAO,SACNA,EAAK,SACLA,EAAK,MAAQM,QAAQ,GAAK,MAC1BN,EAAK,YACLA,EAAK,KAAO,MAAQM,QAAQ,GAAK,OAEjCN,EAAK,KAAO,KAAO,MAAQM,QAAQ,GAAK,OAGpD1D,UAAU,SAAS2D,EAASC,GAC1B,IAAIjE,EAASxB,EAAE0C,OAAO,UAMtB,GAJgB,SAAZ8C,GAAsBxF,EAAE0C,OAAO,gBACjClB,EAAoC,MAA3BxB,EAAE0C,OAAO,cAAwB1C,EAAE0C,OAAO,UAAY1C,EAAE0C,OAAO,eAGpD,mBAAXlB,EACT,OAAOA,EAAOiE,GAGhB,IAAIC,EAAYlE,EAAOmE,QAAQ,KAAO,EAAI,IAAM,IAGhD,OAAOnE,EAASkE,EAFGD,EAAOG,KAAK,OAM/BC,EAAS,SAAS5B,GACpBjB,EAAG0B,UAAUT,GAGTA,EAAM6B,cAAgB7B,EAAM6B,aAAaC,MAC3CC,EAAU/B,EAAM6B,aAAaC,MAAO9B,GAG7BA,EAAM6B,cAAgB7B,EAAM6B,aAAa7F,OAChD+F,EAAU/B,EAAM6B,aAAa7F,MAAOgE,IAGpCY,EAAiB,SAASF,GAC5BA,EAAEE,kBAUJ,SAASoB,EAAYC,EAAMC,EAAMJ,EAAOK,GACtC,IAAIC,EACJ,OAAGH,EAAKI,OAECJ,EAAKpD,MAAK,SAASA,GACxBA,EAAKiC,aAAeoB,EAAOrD,EAAKjF,KAChCkI,EAAM5B,KAAKrB,GACXsD,QAEKF,EAAKK,YAEZF,EAAQH,EACDA,aAAgBM,MACvBT,EAAM5B,KAAK+B,GAEV,mBAAsBA,EAAKO,mBAE5BJ,EAAQH,EAAKO,oBAEZJ,GAASA,EAAME,YAyCpB,SAA2BG,EAAWP,EAAMJ,EAAOK,GACjCM,EAAUC,eAChBC,aAAY,SAASC,GAC7B,IAAIA,EAAQrC,OAEV,OAAO4B,IAGTU,EACED,EAAQE,KAAI,SAASV,GAEnB,OAAOJ,EAAYnH,KAAK,KAAMuH,EAAOF,EAAMJ,MAE7CK,MApDKY,CAAiBX,EAAOF,EAAOE,EAAMxI,KAAO,IAAKkI,EAAOK,IAE9D,mBAAsBF,EAAKe,YAE5Bf,EAAOA,EAAKe,uBACOT,OACjBN,EAAKnB,aAAeoB,EAAOD,EAAKrI,KAChCkI,EAAM5B,KAAK+B,SAGfE,MAWF,SAASU,EAAiBf,EAAOK,GAC/B,IAAIL,GAA0B,IAAjBA,EAAMvB,OAEjB,OAAO4B,IAGTL,EAAM,IAAG,WACPe,EAAiBf,EAAMhG,MAAM,GAAIqG,MAkCrC,SAASJ,EAAUD,EAAO9B,GACxB,GAAI8B,EAAMvB,OAAV,CAGAxE,EAAEqE,KAAK,aACP,IAAIpE,EAAQ,GACZ6G,EACIvD,MAAMrE,UAAU6H,IAAItJ,KAAKsI,GAAO,SAASG,GAEvC,OAAOD,EAAYnH,KAAK,KAAMoH,EAAM,GAAIjG,OAE1C,WACKA,EAAMuE,QAEP0C,EAAwBjH,EAAOgE,OAMzC,IAAIiD,EAA0B,SAASC,EAAUlD,GAE/C,IAAIxB,EAAa,EACb1E,EAAIiC,EAAE0C,OAAO,CAAC,WAAY,cAAe,cAAe,wBAAyB,2BAA4B,2BAA4B,WAAY,0BACzJ,QAAyB,IAAd3E,EAAU,UAAmBA,EAAEmE,SAAUiF,EAAS3C,OAAOxE,EAAEC,MAAMuE,OAAS,CAEnF,GAAiB,IAAbzG,EAAEmE,UAAiC,IAAjBlC,EAAEC,MAAMuE,QAAgC,IAAlB2C,EAAS3C,OAInD,OADAzG,EAAEyE,sBAAsB2E,EAAU1E,MAC3B,EAHPzC,EAAEoH,WAAWpH,EAAEC,MAAM,IAMzB,IAAIA,EAAQ,GAAIoH,EAAe,GAAIC,EAAYH,EAAS3C,OACpD+C,EAAoB,WACtB,MAAMD,EAAU,CAEd,IAAIrH,EAAMuE,SAAW6C,EAAa7C,OAEhC,OAEFlF,OAAOkI,YAAW,WAChBxH,EAAEqE,KAAK,aAAcpE,EAAOoH,KAC5B,KAGNrE,EAAGS,KAAK0D,GAAU,SAASrE,GACzB,IAAIC,EAAWD,EAAKjF,KACpB,GAAGE,EAAEqF,SAASoB,OAAS,EAAE,CACvB,IAAIiD,GAAgB,EACpB,IAAI,IAAIC,KAAS3J,EAAEqF,SAAS,CAC1B,IAAIuE,EAAY,IAAM5J,EAAEqF,SAASsE,GAC1C,IAAoG,IAAjG3E,EAASqB,cAAcuB,QAAQgC,EAAUvD,cAAerB,EAASyB,OAASmD,EAAUnD,QAAe,CAC3FiD,GAAgB,EAChB,OAGJ,IAAKA,EAEH,OADA1J,EAAEsF,sBAAsBP,EAAML,MACvB,EAIX,QAA4B,IAAjB1E,EAAa,aAAmB+E,EAAKmC,KAAKlH,EAAE6E,YAErD,OADA7E,EAAE8E,yBAAyBC,EAAML,MAC1B,EAET,QAA4B,IAAjB1E,EAAa,aAAmB+E,EAAKmC,KAAKlH,EAAEmF,YAErD,OADAnF,EAAEoF,yBAAyBL,EAAML,MAC1B,EAGT,SAASmF,EAAQC,GACV7H,EAAE8H,wBAAwBD,GAU7BR,EAAalD,KAAKrB,GAV+B,WACjDA,EAAK+E,iBAAmBA,EACxB,IAAIE,EAAI,IAAIlE,EAAc7D,EAAG8C,EAAM+E,GACnC7H,EAAEC,MAAMkE,KAAK4D,GACb9H,EAAMkE,KAAK4D,GACXA,EAAEC,eAA6B,IAAT/D,EAAuBA,EAAMgE,WAAa,KAChE3I,OAAOkI,YAAW,WAChBxH,EAAEqE,KAAK,YAAa0D,EAAG9D,KACvB,GAR+C,GAYnDsD,IAGF,IAAIM,EAAmB7E,EAAGpB,yBAAyBkB,EAAMmB,GACtD4D,GAAqD,mBAA1BA,EAAiBK,KAE7CL,EACCK,MACC,SAASL,GAEPD,EAAQC,MAEX,WAGGN,OAKJK,EAAQC,OAMd,SAAShE,EAAcC,EAAchB,EAAM+E,GACzC,IAAI7H,EAAIP,KACRO,EAAER,KAAO,GACTQ,EAAE0C,OAASoB,EAAapB,OACxB1C,EAAEmI,cAAgB,EAClBnI,EAAE8D,aAAeA,EACjB9D,EAAE8C,KAAOA,EACT9C,EAAE+C,SAAWD,EAAKC,UAAUD,EAAKjF,KACjCmC,EAAEiF,KAAOnC,EAAKmC,KACdjF,EAAE+E,aAAejC,EAAKiC,cAAgBjC,EAAKkC,oBAAsBhF,EAAE+C,SACnE/C,EAAE6H,iBAAmBA,EACrB7H,EAAEoI,QAAS,EACXpI,EAAEgI,UAAY,GACd,IAAIK,OAA8BrG,IAArB6F,EAGTS,EAAa,SAASrE,EAAOsE,GAE/B,OAAOtE,GACP,IAAK,WACHjE,EAAE8D,aAAaO,KAAK,eAAgBrE,EAAGuI,GACvC,MACF,IAAK,QACHvI,EAAEwI,QACFH,GAAS,EACTrI,EAAEyI,OAAS,GACXzI,EAAE8D,aAAaO,KAAK,YAAarE,EAAGuI,GACpC,MACF,IAAK,UACH,GAAGF,EAAQ,OACXrI,EAAE8D,aAAaO,KAAK,eAAgBrE,GACjCA,EAAE0I,cACH1I,EAAE8D,aAAaO,KAAK,cAAerE,EAAGuI,GAExC,MACF,IAAK,QACHvI,EAAE8D,aAAaO,KAAK,YAAarE,KA6GrC,OAtGAA,EAAEyI,OAAS,GACXzI,EAAEwI,MAAQ,WAER,IAAIG,EAAa,EACjB3F,EAAGS,KAAKzD,EAAEyI,QAAQ,SAAS9K,GACV,aAAZA,EAAEiL,WACHjL,EAAE6K,QACFG,QAGDA,EAAW,GAAG3I,EAAE8D,aAAaO,KAAK,eAAgBrE,IAEvDA,EAAE6I,OAAS,WAET,IAAIC,EAAU9I,EAAEyI,OAChBzI,EAAEyI,OAAS,GAEXzF,EAAGS,KAAKqF,GAAS,SAASnL,GACT,aAAZA,EAAEiL,WACHjL,EAAE6K,QACFxI,EAAE8D,aAAaiF,sBAGnB/I,EAAE8D,aAAasD,WAAWpH,GAC1BA,EAAE8D,aAAaO,KAAK,eAAgBrE,IAEtCA,EAAEgJ,MAAQ,WACRhJ,EAAEiJ,YACF,IAAIC,GAAa,EACjBlJ,EAAE8D,aAAaE,GAAG,oBAAoB,WAChCkF,GAAYlJ,EAAE8D,aAAaqF,SAC/BD,GAAa,MAGjBlJ,EAAEiJ,UAAY,WACZjJ,EAAEwI,QACFH,GAAS,EAETrI,EAAEyI,OAAS,GACXzI,EAAEmI,cAAgB,EAGlB,IAFA,IAAIiB,EAAQpJ,EAAE0C,OAAO,kBAAoB2G,KAAKC,KAAOD,KAAKE,MACtDC,EAAYH,KAAKI,IAAIL,EAAMpJ,EAAE8C,KAAKmC,KAAKjF,EAAE0C,OAAO,cAAc,GACzDgH,EAAO,EAAGA,EAAOF,EAAWE,KAAW,SAAUA,GACtDpK,OAAOkI,YAAW,WACdxH,EAAEyI,OAAOtE,KAAK,IAAIR,EAAe3D,EAAE8D,aAAc9D,EAAG0J,EAAQpB,IAC5DtI,EAAE8D,aAAaO,KAAK,mBAAmBrE,EAAE0J,EAAOF,KAClD,GAJ0C,CAK7CE,GACHpK,OAAOkI,YAAW,WACdxH,EAAE8D,aAAaO,KAAK,mBAAmBrE,KACzC,IAEJA,EAAE2J,SAAW,WACX,GAAGtB,EAAQ,OAAM,EAEjB,IAAIuB,EAAM,EACNC,GAAQ,EAQZ,OAPA7G,EAAGS,KAAKzD,EAAEyI,QAAQ,SAAS9K,GACV,SAAZA,EAAEiL,WAAmBiB,GAAQ,GAChCD,GAAOjM,EAAEgM,UAAS,MAEpBC,EAAOC,GAAaD,EAAI,OAAT,EAAuBA,EACtCA,EAAMP,KAAKI,IAAIzJ,EAAEmI,cAAeyB,GAChC5J,EAAEmI,cAAgByB,EACZ,GAER5J,EAAE8J,YAAc,WACd,IAAIC,GAAY,EAOhB,OANA/G,EAAGS,KAAKzD,EAAEyI,QAAQ,SAASuB,GACzB,GAAmB,aAAhBA,EAAMpB,SAEP,OADAmB,GAAY,GACN,KAGJ,GAER/J,EAAE0I,WAAa,WACb,IAAIuB,GAAc,EAQlB,OAPAjH,EAAGS,KAAKzD,EAAEyI,QAAQ,SAASuB,GACzB,IAAIpB,EAASoB,EAAMpB,SACnB,GAAW,WAARA,GAA6B,aAARA,GAAiD,IAA1BoB,EAAME,gBAEnD,OADAD,GAAc,GACR,MAGFA,GAEVjK,EAAEmK,MAAQ,SAASA,GAEXnK,EAAEoI,YADa,IAAV,GACOpI,EAAEoI,OAEH+B,GAGnBnK,EAAEoK,SAAW,WACX,OAAOpK,EAAEoI,QAKXpI,EAAE8D,aAAaO,KAAK,gBAAiBrE,GACrCA,EAAEiJ,YACI,KAIR,SAAStF,EAAeG,EAAcF,EAAS8F,EAAQxF,GACrD,IAAIlE,EAAIP,KACRO,EAAER,KAAO,GACTQ,EAAE0C,OAASoB,EAAapB,OACxB1C,EAAE8D,aAAeA,EACjB9D,EAAE4D,QAAUA,EACZ5D,EAAEqK,YAAczG,EAAQqB,KACxBjF,EAAEsK,YAAc1G,EAAQd,KAAKyH,KAC7BvK,EAAE0J,OAASA,EACX1J,EAAEkE,SAAWA,EACblE,EAAEwK,qBAAuB,IAAKC,KAC9BzK,EAAE0K,QAAS,EACX1K,EAAE2K,QAAU,EACZ3K,EAAE4K,cAAe,EACjB5K,EAAEkK,gBAAkB,EAGpB,IAAI/J,EAAYH,EAAE0C,OAAO,aA6QzB,OA5QA1C,EAAE6K,OAAS,EACX7K,EAAE8K,UAAY9K,EAAE0J,OAAOvJ,EACvBH,EAAE+K,QAAU1B,KAAK2B,IAAIhL,EAAEqK,aAAcrK,EAAE0J,OAAO,GAAGvJ,GAC7CH,EAAEqK,YAAYrK,EAAE+K,QAAU5K,IAAcH,EAAE0C,OAAO,oBAEnD1C,EAAE+K,QAAU/K,EAAEqK,aAEhBrK,EAAEiL,IAAM,KAGRjL,EAAEqF,KAAO,WAEPrF,EAAEiL,IAAM,IAAIC,eAEZ,IAAIC,EAAc,SAASxG,GACzB3E,EAAE0K,QAAS,EACX,IAAI9B,EAAS5I,EAAE4I,SACJ,WAARA,GACD5I,EAAEkE,SAAS0E,EAAQ5I,EAAEuI,WACrBvI,EAAE8D,aAAaiF,mBAEf/I,EAAEoL,QAGNpL,EAAEiL,IAAII,iBAAiB,OAAQF,GAAa,GAC5CnL,EAAEiL,IAAII,iBAAiB,QAASF,GAAa,GAC7CnL,EAAEiL,IAAII,iBAAiB,UAAWF,GAAa,GAG/C,IAAI1F,EAAS,GACT/D,EAAqB1B,EAAE0C,OAAO,sBAC9B4I,EAActL,EAAE0C,OAAO,SACF,mBAAf4I,IAA2BA,EAAcA,EAAYtL,EAAE4D,QAAS5D,IAC1EgD,EAAGS,KAAK6H,GAAa,SAASC,EAAEC,GAC9B/F,EAAOtB,KAAK,CAACsH,mBAAmB/J,EAAmB6J,GAAIE,mBAAmBD,IAAI5F,KAAK,SAGrFH,EAASA,EAAOiG,OACd,CAEE,CAAC,2BAA4B1L,EAAE0J,OAAS,GACxC,CAAC,yBAA0B1J,EAAE0C,OAAO,cACpC,CAAC,gCAAiC1C,EAAE+K,QAAU/K,EAAE8K,WAChD,CAAC,yBAA0B9K,EAAEqK,aAC7B,CAAC,oBAAqBrK,EAAEsK,aACxB,CAAC,0BAA2BtK,EAAE4D,QAAQiE,kBACtC,CAAC,wBAAyB7H,EAAE4D,QAAQb,UACpC,CAAC,4BAA6B/C,EAAE4D,QAAQmB,cACxC,CAAC,2BAA4B/E,EAAE4D,QAAQ6E,OAAOjE,SAC9CmH,QAAO,SAASC,GAGhB,OAAO5L,EAAE0C,OAAOkJ,EAAK,OAEtB7E,KAAI,SAAS6E,GAEZ,MAAO,CACLlK,EAAqB1B,EAAE0C,OAAOkJ,EAAK,IACnCH,mBAAmBG,EAAK,KACxBhG,KAAK,SAIX5F,EAAEiL,IAAIY,KAAK7L,EAAE0C,OAAO,cAAeM,EAAGnB,UAAU,OAAQ4D,IACxDzF,EAAEiL,IAAIa,QAAU9L,EAAE0C,OAAO,cACzB1C,EAAEiL,IAAI9I,gBAAkBnC,EAAE0C,OAAO,mBAEjC,IAAIqJ,EAAgB/L,EAAE0C,OAAO,WACD,mBAAlBqJ,IACRA,EAAgBA,EAAc/L,EAAE4D,QAAS5D,IAE3CgD,EAAGS,KAAKsI,GAAe,SAASR,EAAEC,GAChCxL,EAAEiL,IAAIe,iBAAiBT,EAAGC,MAE5BxL,EAAEiL,IAAIG,KAAK,OAGbpL,EAAEiM,mBAAqB,WACrBjM,EAAEkK,gBAAkB,EACpBlK,EAAEoL,QAIJpL,EAAEoL,KAAO,WACP,IAAIjK,EAAanB,EAAE0C,OAAO,cAC1B,GAAyB,mBAAfvB,EACR,OAAOnB,EAAEkK,iBACT,KAAK,EAAyC,OAAtClK,EAAEkK,gBAAkB,OAAG/I,EAAWnB,GAC1C,KAAK,EAAG,OAIV,IAAGA,EAAE0C,OAAO,eAAkB1C,EAAE0K,OAAhC,CAMA1K,EAAEiL,IAAM,IAAIC,eAGZlL,EAAEiL,IAAI9B,OAAOkC,iBAAiB,YAAY,SAAS1G,GAC7C,IAAK8F,KAAQzK,EAAEwK,qBAA+D,IAAxCxK,EAAE0C,OAAO,+BACjD1C,EAAEkE,SAAS,YACXlE,EAAEwK,qBAAuB,IAAKC,MAEhCzK,EAAE6K,OAAOlG,EAAEkG,QAAQ,KAClB,GACH7K,EAAE6K,OAAS,EACX7K,EAAE4K,cAAe,EACjB5K,EAAEkE,SAAS,YAGX,IAAIgI,EAAc,SAASvH,GACzB,IAAIiE,EAAS5I,EAAE4I,SACf,GAAW,WAARA,GAA2B,SAARA,EACpB5I,EAAEkE,SAAS0E,EAAQ5I,EAAEuI,WACrBvI,EAAE8D,aAAaiF,sBACV,CACL/I,EAAEkE,SAAS,QAASlE,EAAEuI,WACtBvI,EAAEwI,QACFxI,EAAE2K,UACF,IAAIwB,EAAgBnM,EAAE0C,OAAO,2BACRV,IAAlBmK,GACDnM,EAAE4K,cAAe,EACjBpD,WAAWxH,EAAEoL,KAAMe,IAEnBnM,EAAEoL,SAIRpL,EAAEiL,IAAII,iBAAiB,OAAQa,GAAa,GAC5ClM,EAAEiL,IAAII,iBAAiB,QAASa,GAAa,GAC7ClM,EAAEiL,IAAII,iBAAiB,UAAWa,GAAa,GAG/C,IAAIjL,EAAQ,CACV,CAAC,2BAA4BjB,EAAE0J,OAAS,GACxC,CAAC,yBAA0B1J,EAAE0C,OAAO,cACpC,CAAC,gCAAiC1C,EAAE+K,QAAU/K,EAAE8K,WAChD,CAAC,yBAA0B9K,EAAEqK,aAC7B,CAAC,oBAAqBrK,EAAEsK,aACxB,CAAC,0BAA2BtK,EAAE4D,QAAQiE,kBACtC,CAAC,wBAAyB7H,EAAE4D,QAAQb,UACpC,CAAC,4BAA6B/C,EAAE4D,QAAQmB,cACxC,CAAC,2BAA4B/E,EAAE4D,QAAQ6E,OAAOjE,SAC9CmH,QAAO,SAASC,GAGhB,OAAO5L,EAAE0C,OAAOkJ,EAAK,OAEtBQ,QAAO,SAASnL,EAAO2K,GAGtB,OADA3K,EAAMjB,EAAE0C,OAAOkJ,EAAK,KAAOA,EAAK,GACzB3K,IACN,IAECqK,EAActL,EAAE0C,OAAO,SACF,mBAAf4I,IAA2BA,EAAcA,EAAYtL,EAAE4D,QAAS5D,IAC1EgD,EAAGS,KAAK6H,GAAa,SAASC,EAAEC,GAC9BvK,EAAMsK,GAAKC,KAGb,IAAIa,EAAQrM,EAAE4D,QAAQd,KAAK/C,MAAQ,QAAWC,EAAE4D,QAAQd,KAAKhD,SAAW,WAAcE,EAAE4D,QAAQd,KAAKjD,YAAc,cAAgB,QAC/HyM,EAAQtM,EAAE4D,QAAQd,KAAKuJ,GAAMrM,EAAE8K,UAAW9K,EAAE+K,QAAS/K,EAAE0C,OAAO,wBAA0B1C,EAAE4D,QAAQd,KAAKyH,KAAO,IAC9GgC,EAAO,KACP9G,EAAS,GAET/D,EAAqB1B,EAAE0C,OAAO,sBAC1B,GAA2B,UAAvB1C,EAAE0C,OAAO,UAET6J,EAAOD,EACPtJ,EAAGS,KAAKxC,GAAO,SAAUsK,EAAGC,GACxB/F,EAAOtB,KAAK,CAACsH,mBAAmB/J,EAAqB6J,GAAIE,mBAAmBD,IAAI5F,KAAK,cASzF,GALA2G,EAAO,IAAIC,SACXxJ,EAAGS,KAAKxC,GAAO,SAAUsK,EAAGC,GACxBe,EAAKE,OAAO/K,EAAqB6J,EAAGC,GACpC/F,EAAOtB,KAAK,CAACsH,mBAAmB/J,EAAqB6J,GAAIE,mBAAmBD,IAAI5F,KAAK,SAE1D,QAA3B5F,EAAE0C,OAAO,eACT6J,EAAKE,OAAO/K,EAAqB1B,EAAE0C,OAAO,qBAAsB4J,EAAOtM,EAAE4D,QAAQb,eAEhF,GAA+B,UAA3B/C,EAAE0C,OAAO,eAA4B,CAC1C,IAAIgK,EAAK,IAAIC,WACbD,EAAGE,OAAS,SAAUjI,GAClB4H,EAAKE,OAAO/K,EAAqB1B,EAAE0C,OAAO,qBAAsBgK,EAAGpH,QACnEtF,EAAEiL,IAAIG,KAAKmB,IAEfG,EAAGG,cAAcP,GAIjC,IAAI9K,EAASwB,EAAGnB,UAAU,SAAU4D,GAChCrE,EAASpB,EAAE0C,OAAO,gBAEtB1C,EAAEiL,IAAIY,KAAKzK,EAAQI,GACQ,UAAvBxB,EAAE0C,OAAO,WACX1C,EAAEiL,IAAIe,iBAAiB,eAAgB,4BAEzChM,EAAEiL,IAAIa,QAAU9L,EAAE0C,OAAO,cACzB1C,EAAEiL,IAAI9I,gBAAkBnC,EAAE0C,OAAO,mBAEjC,IAAIqJ,EAAgB/L,EAAE0C,OAAO,WACD,mBAAlBqJ,IACRA,EAAgBA,EAAc/L,EAAE4D,QAAS5D,IAG3CgD,EAAGS,KAAKsI,GAAe,SAASR,EAAEC,GAChCxL,EAAEiL,IAAIe,iBAAiBT,EAAGC,MAGW,QAA3BxL,EAAE0C,OAAO,gBACT1C,EAAEiL,IAAIG,KAAKmB,QA1HrBvM,EAAEqF,QA6HNrF,EAAEwI,MAAQ,WAELxI,EAAEiL,KAAKjL,EAAEiL,IAAIzC,QAChBxI,EAAEiL,IAAM,MAEVjL,EAAE4I,OAAS,WAET,OAAG5I,EAAE4K,aAGG,YACG5K,EAAEiL,IAEHjL,EAAEiL,IAAI6B,WAAW,EAEnB,YAEa,KAAhB9M,EAAEiL,IAAIrC,QAAiC,KAAhB5I,EAAEiL,IAAIrC,OAExB,UACE5F,EAAGmC,SAASnF,EAAE0C,OAAO,mBAAoB1C,EAAEiL,IAAIrC,SAAW5I,EAAE2K,SAAW3K,EAAE0C,OAAO,mBAElF,SAIN1C,EAAEwI,QACI,WAfF,WAmBVxI,EAAEuI,QAAU,WACV,OAAOvI,EAAEiL,IAAMjL,EAAEiL,IAAI8B,aAAe,IAEtC/M,EAAE2J,SAAW,SAASqD,QACE,IAAb,IAA0BA,GAAW,GAC9C,IAAIC,EAAUD,GAAYhN,EAAE+K,QAAQ/K,EAAE8K,WAAW9K,EAAEqK,YAAc,EACjE,GAAGrK,EAAE4K,aAAc,OAAM,EAGzB,OAFI5K,EAAEiL,KAAQjL,EAAEiL,IAAIrC,SAAQqE,GAAQ,KAC5BjN,EAAE4I,UAEV,IAAK,UACL,IAAK,QACH,OAAO,EAAEqE,EACX,IAAK,UACH,OAAO,EAAEA,EACX,QACE,OAAOjN,EAAE6K,QAAQ7K,EAAE+K,QAAQ/K,EAAE8K,WAAWmC,IAGtC,KA6MR,OAzMAjN,EAAE+I,gBAAkB,WAClB,IAAImE,GAAQ,EAKZ,GAAIlN,EAAE0C,OAAO,iCACXM,EAAGS,KAAKzD,EAAEC,OAAO,SAAS6C,GACxB,OAAGA,EAAK2F,OAAOjE,QAAmC,WAAzB1B,EAAK2F,OAAO,GAAGG,UAA0D,IAAnC9F,EAAK2F,OAAO,GAAGyB,iBAC5EpH,EAAK2F,OAAO,GAAG2C,OACf8B,GAAQ,GACF,GAELpK,EAAK2F,OAAOjE,OAAO,GAAiD,WAA5C1B,EAAK2F,OAAO3F,EAAK2F,OAAOjE,OAAO,GAAGoE,UAA6E,IAAtD9F,EAAK2F,OAAO3F,EAAK2F,OAAOjE,OAAO,GAAG0F,iBACpHpH,EAAK2F,OAAO3F,EAAK2F,OAAOjE,OAAO,GAAG4G,OAClC8B,GAAQ,GACF,QAHR,KAMCA,GAAO,OAAM,EAgBlB,GAZAlK,EAAGS,KAAKzD,EAAEC,OAAO,SAAS6C,GAUxB,IATqB,IAAlBA,EAAKsH,YACPpH,EAAGS,KAAKX,EAAK2F,QAAQ,SAASuB,GAC5B,GAAmB,WAAhBA,EAAMpB,UAAiD,IAA1BoB,EAAME,gBAGpC,OAFAF,EAAMoB,OACN8B,GAAQ,GACF,KAIRA,EAAO,OAAM,KAEfA,EAAO,OAAM,EAGhB,IAAIjD,GAAc,EAWlB,OAVAjH,EAAGS,KAAKzD,EAAEC,OAAO,SAAS6C,GACxB,IAAIA,EAAK4F,aAEP,OADAuB,GAAc,GACR,KAGNA,GAEFjK,EAAEqE,KAAK,aAEH,GAKRrE,EAAEmN,aAAe,SAASC,EAAU7G,QACN,IAAlB6G,EAAe,SAAgBA,EAAW,CAACA,IAErDpK,EAAGS,KAAK2J,GAAU,SAASC,GACzB,IAAIC,EACiB,UAAlBD,EAAQE,SAAoC,SAAfF,EAAQ9C,KACtC+C,EAAQD,IAERC,EAAQE,SAASC,cAAc,UACzBC,aAAa,OAAQ,QAC3BJ,EAAMK,MAAMC,QAAU,OACtBP,EAAQhC,iBAAiB,SAAS,WAChCiC,EAAMK,MAAME,QAAU,EACtBP,EAAMK,MAAMC,QAAQ,QACpBN,EAAMQ,QACNR,EAAMS,QACNT,EAAMK,MAAMC,QAAQ,UACnB,GACHP,EAAQW,YAAYV,IAEtB,IAAIpL,EAAWlC,EAAE0C,OAAO,iBACD,IAAb,GAAoC,GAAVR,EAClCoL,EAAMI,aAAa,WAAY,YAE/BJ,EAAMW,gBAAgB,YAErB1H,EACD+G,EAAMI,aAAa,kBAAmB,mBAEtCJ,EAAMW,gBAAgB,mBAExB,IAAIC,EAAYlO,EAAE0C,OAAO,iBACE,IAAhB,GAA+BwL,EAAU1J,QAAU,EAC5D8I,EAAMI,aAAa,SAAUQ,EAAUnH,KAAI,SAAUpC,GAAK,MAAO,IAAMA,KAAKiB,KAAK,MAGjF0H,EAAMW,gBAAgB,UAGxBX,EAAMjC,iBAAiB,UAAU,SAAS1G,GACxCuC,EAAwBvC,EAAEnD,OAAOvB,MAAM0E,GACtB3E,EAAE0C,OAAO,gBAExBiC,EAAEnD,OAAOjD,MAAQ,OAElB,OAGPyB,EAAEmO,WAAa,SAASf,QACM,IAAlBA,EAAe,SAAgBA,EAAW,CAACA,IAErDpK,EAAGS,KAAK2J,GAAU,SAASC,GACzBA,EAAQhC,iBAAiB,WAAYxG,GAAgB,GACrDwI,EAAQhC,iBAAiB,YAAaxG,GAAgB,GACtDwI,EAAQhC,iBAAiB,OAAQxF,GAAQ,OAG7C7F,EAAEoO,aAAe,SAAShB,QACO,IAApBA,EAAe,SAAkBA,EAAW,CAACA,IAExDpK,EAAGS,KAAK2J,GAAU,SAASC,GACzBA,EAAQgB,oBAAoB,WAAYxJ,GACxCwI,EAAQgB,oBAAoB,YAAaxJ,GACzCwI,EAAQgB,oBAAoB,OAAQxI,OAGxC7F,EAAE8J,YAAc,WACd,IAAIC,GAAY,EAOhB,OANA/G,EAAGS,KAAKzD,EAAEC,OAAO,SAAS6C,GACxB,GAAIA,EAAKgH,cAEP,OADAC,GAAY,GACN,KAGJ,GAER/J,EAAEmJ,OAAS,WAET,IAAGnJ,EAAE8J,cAAL,CAEA9J,EAAEqE,KAAK,eACP,IAAK,IAAIiK,EAAI,EAAGA,GAAKtO,EAAE0C,OAAO,uBAAwB4L,IACpDtO,EAAE+I,oBAGN/I,EAAEmK,MAAQ,WAERnH,EAAGS,KAAKzD,EAAEC,OAAO,SAAS6C,GACxBA,EAAK0F,WAEPxI,EAAEqE,KAAK,UAETrE,EAAE6I,OAAS,WACT7I,EAAEqE,KAAK,gBACP,IAAI,IAAI/G,EAAI0C,EAAEC,MAAMuE,OAAS,EAAGlH,GAAK,EAAGA,IACtC0C,EAAEC,MAAM3C,GAAGuL,SAEb7I,EAAEqE,KAAK,WAETrE,EAAE2J,SAAW,WACX,IAAI4E,EAAY,EACZC,EAAY,EAMhB,OAJAxL,EAAGS,KAAKzD,EAAEC,OAAO,SAAS6C,GACxByL,GAAazL,EAAK6G,WAAW7G,EAAKmC,KAClCuJ,GAAa1L,EAAKmC,QAEbuJ,EAAU,EAAID,EAAUC,EAAY,GAE7CxO,EAAE4H,QAAU,SAAS9E,EAAMmB,GACzBiD,EAAwB,CAACpE,GAAOmB,IAElCjE,EAAEyO,SAAW,SAASxO,EAAOgE,GAC3BiD,EAAwBjH,EAAOgE,IAEjCjE,EAAEoH,WAAa,SAAStE,GACtB,IAAI,IAAIxF,EAAI0C,EAAEC,MAAMuE,OAAS,EAAGlH,GAAK,EAAGA,IACnC0C,EAAEC,MAAM3C,KAAOwF,GAChB9C,EAAEC,MAAMyO,OAAOpR,EAAG,IAIxB0C,EAAE8H,wBAA0B,SAASD,GACnC,IAAI+B,GAAM,EAIV,OAHA5G,EAAGS,KAAKzD,EAAEC,OAAO,SAAS8H,GACrBA,EAAEF,kBAAkBA,IAAkB+B,EAAM7B,MAE3C,GAER/H,EAAE2O,QAAU,WACV,IAAIH,EAAY,EAIhB,OAHAxL,EAAGS,KAAKzD,EAAEC,OAAO,SAAS6C,GACxB0L,GAAa1L,EAAKmC,QAEd,GAERjF,EAAE4O,gBAAkB,SAAUjK,GAC5BkB,EAAOlB,IAET3E,EAAE6O,kBAAoB,SAAUlK,GAC9BuC,EAAwBvC,EAAEnD,OAAOvB,MAAO0E,GACxCA,EAAEnD,OAAOjD,MAAQ,IAEnByB,EAAE8O,YAAc,SAAS7N,GACrBjB,EAAER,KAAKyB,MAAQA,GAGb,MAMN5D,EAAOD,QAAUmC,EAziCrB,I,goCCHqBwP,E,uZAajB,WAAYC,GAAO,a,4FAAA,UACf,cAAMA,IACDC,MAAQF,EAAsBG,aACnC,EAAKC,cAAgB,EAAKA,cAAcrQ,KAAnB,MACrB,EAAKsQ,aAAe,EAAKA,aAAatQ,KAAlB,MACpB,EAAKuQ,YAAc,EAAKA,YAAYvQ,KAAjB,MACnB,EAAKwQ,YAAc,EAAKA,YAAYxQ,KAAjB,MACnB,EAAKyQ,UAAY,KAPF,E,oDAWf9P,KAAK+P,SAAST,EAAsBG,gB,0CAGpB,WAEVO,EAAiB,IAAIC,IAAY,CACnClO,OAAQ/B,KAAKuP,MAAMW,QACnB1O,MAAO,GACPmC,SAAU3D,KAAKuP,MAAMY,UACrB1N,SAAUzC,KAAKuP,MAAM9M,SACrBgB,YAAazD,KAAKuP,MAAM9L,YACxBG,sBAAuB,WACnB,EAAKmM,SAAS,CACVK,cAAe,wBAGvBvO,WAAY,OACZK,YAAY,EACZT,QAAS,GACTf,UAAWV,KAAKuP,MAAM7O,UACtBE,oBAAqBZ,KAAKuP,MAAM3O,oBAChCD,gBAAgB,IAIpBqP,EAAetC,aAAa1N,KAAKqQ,WAGK,IAAlCrQ,KAAKuP,MAAMe,oBACXN,EAAetB,WAAW1O,KAAKuQ,UAGnCP,EAAezL,GAAG,aAAa,SAAClB,GAC5B,EAAK0M,SAAS,CACVK,cAAe,EAAKb,MAAMiB,kBAAoB,wBAA0BnN,EAAKC,SAC7E2F,YAAY,EACZwH,oBAAoB,IAGc,mBAA3B,EAAKlB,MAAMmB,YAClB,EAAKnB,MAAMmB,YAAYrN,EAAM,EAAKyM,WAElCE,EAAetG,YAKvBsG,EAAezL,GAAG,eAAe,SAAClB,EAAMsN,GAEpC,GAAI,EAAKpB,MAAMqB,eAAgB,CAC3B,IAAMC,EAAeC,KAAKC,MAAMJ,GAChCtN,EAAKC,SAAWuN,EAAa,EAAKtB,MAAMqB,qBAExCvN,EAAKC,SAAWqN,EAEpB,IAAMK,EAAe,EAAKxB,MAAM9H,SAASlH,MACzCwQ,EAAatM,KAAKrB,GAElB,IAAM4N,EAAY,EAAK1B,MAAM0B,UAC7BA,EAAUvM,KAAKrB,EAAKC,UAEhB,EAAKiM,MAAM2B,UACX,EAAK3B,MAAM2B,SAAS,CAChBD,UAAWA,IAGnB,EAAKlB,SAAS,CACVrI,SAAU,CAAElH,MAAOwQ,GACnB/H,YAAY,EACZwH,oBAAoB,EACpBL,cAAe,EAAKb,MAAM4B,iBAAmB9N,EAAKC,UAAYqN,IAC/D,WACyC,mBAA7B,EAAKpB,MAAM6B,eAClB,EAAK7B,MAAM6B,cAAc/N,EAAMsN,SAK3CX,EAAezL,GAAG,YAAY,WAG1B,EAAKwL,SAAS,CACV1F,YAAa2F,EAAe3F,gBAGC,IAA5B2F,EAAe9F,WAAoB,IACpC,EAAK6F,SAAS,CACVK,cAAeiB,SAAqC,IAA5BrB,EAAe9F,WAAkB,IAAM,IAC/DoH,YAAyC,IAA5BtB,EAAe9F,aAGhCnC,YAAW,WACP,EAAKgI,SAAS,CACVuB,YAAa,MAElB,QAKXtB,EAAezL,GAAG,aAAa,SAAClB,EAAML,QAEgB,IAAtC,EAAKuM,MAAMgC,sBACnB,EAAKhC,MAAMgC,sBAAsBlO,EAAML,GAEvCwO,QAAQC,IAAI,kDAAmDpO,EAAML,MAK7EhD,KAAK8P,UAAYE,I,qCAKjBhQ,KAAK8P,UAAU1G,SACfpJ,KAAK0R,iB,oCAIA1R,KAAKwP,MAAM7E,UAOZ3K,KAAK8P,UAAUpG,SACf1J,KAAK+P,SAAS,CACVpF,UAAU,EACVN,aAAa,MATjBrK,KAAK8P,UAAUpF,QACf1K,KAAK+P,SAAS,CACVpF,UAAU,EACVN,aAAa,O,oCAYrBrK,KAAK+P,SAAS,CACVpF,UAAU,M,sCAKd3K,KAAK+P,SAAS,CACV4B,WAAY3R,KAAKwP,MAAMmC,c,+BAItB,WAIDC,EAAY,KACZ5R,KAAKuP,MAAMqC,YACXA,EAAY5R,KAAKuP,MAAMqC,WAG3B,IAAIC,EAAc,KACd7R,KAAKuP,MAAMsC,cAEPA,EADkC,iBAA3B7R,KAAKuP,MAAMsC,aAA8D,kBAA3B7R,KAAKuP,MAAMsC,YAClD,yBAAK3D,MAAO,CAAEC,QAAS,iBACjC,4BACID,MAAO,CACH4D,OAAQ9R,KAAKwP,MAAMnF,YAAc,UAAY,WAEjD0H,SAAU/R,KAAKwP,MAAMnF,YACrB2H,UAAU,0BACVC,QAASjS,KAAK6P,aAAc7P,KAAKuP,MAAMsC,aAAe,WAI7C7R,KAAKuP,MAAMsC,aAGpC,IAAIK,EAAe,KACflS,KAAKuP,MAAM2C,cAAgBlS,KAAKwP,MAAMiB,qBAGlCyB,EAFmC,iBAA5BlS,KAAKuP,MAAM2C,cACiB,kBAA5BlS,KAAKuP,MAAM2C,aACH,yBAAKhE,MAAO,CAAEC,QAAS,iBAClC,4BACID,MAAO,CACH4D,OAAQ9R,KAAKwP,MAAMnF,YAAc,UAAY,WAEjD0H,UAAW/R,KAAKwP,MAAMnF,YACtB2H,UAAU,2BACVC,QAASjS,KAAK2P,cAAe3P,KAAKuP,MAAM2C,cAAgB,WAI9ClS,KAAKuP,MAAM2C,cAGrC,IAAIC,EAAc,KA8ClB,OA7CInS,KAAKuP,MAAM4C,aAAenS,KAAKwP,MAAMiB,qBAGjC0B,EAFkC,iBAA3BnS,KAAKuP,MAAM4C,aACmB,kBAA3BnS,KAAKuP,MAAM4C,YACP,yBAAKjE,MAAO,CAAEC,QAAS,iBACjC,4BACID,MAAO,CACH4D,OAAQ9R,KAAKwP,MAAMnF,YAAc,UAAY,WAEjD0H,UAAW/R,KAAKwP,MAAMnF,YACtB2H,UAAU,0BACVC,QAASjS,KAAK4P,aACb5P,KAAKuP,MAAM4C,cACJnS,KAAKwP,MAAM7E,SAAW,SAAW,WAIhC3K,KAAKuP,MAAM4C,aA8BhC,yBAAKjE,MA1BD,EAAKsB,MAAMvG,WACJ,EAAKsG,MAAM6C,cACX,EAAK5C,MAAMmC,WAAa,EAAKnC,MAAMnF,YACnC,EAAKkF,MAAM8C,YAEf,EAAK9C,MAAM+C,aAqBMC,GAAIvS,KAAKuP,MAAMgD,GAAIP,UAhBvC,EAAKzC,MAAMiD,cACJ,EAAKjD,MAAMkD,aACX,EAAKjD,MAAMmC,UACX,EAAKpC,MAAMmD,aACX,EAAKlD,MAAMnF,YACX,EAAKkF,MAAMoD,eACX,EAAKnD,MAAMvG,YAEX,EAAKuG,MAAM7E,SADX,EAAK4E,MAAMqD,cAIf,EAAKrD,MAAMyC,UAKgDa,IAAK,SAAAC,GAAI,OAAI,EAAKvC,SAAWuC,IAC3F,yBAAKP,GAAIvS,KAAKuP,MAAMgD,GAAK,WACrBrE,MAAO,CACH6E,QAAS,SAEb,2BACI7E,MAAO,CACHC,QAAS,eACT6E,cAAe,SAAUC,WAAY,SACrCC,MAAOlT,KAAKwP,MAAMnF,YAAc,OAAS,OACzC8I,aAAcnT,KAAKwP,MAAMnF,YAAc,OAAS,IAChD+I,UAAW,SAAUC,SAAU,aAC/BvB,OAAQ9R,KAAKwP,MAAMnF,YAAc,UAAY,WAEjDiJ,aAActT,KAAK0P,cACnB6D,aAAcvT,KAAK0P,eAEU,IAA5B1P,KAAKwP,MAAMY,cAAsBwB,EAAY5R,KAAKwP,MAAMY,cACzD,2BACIyC,IAAK,SAAAC,GAAI,OAAI,EAAKzC,SAAWyC,GAC7BhI,KAAK,OACLkH,UAAU,MACV5T,KAAM4B,KAAKuP,MAAMgD,GAAK,UACtBiB,OAAQxT,KAAKuP,MAAMkE,YAAc,IACjC1B,SAAU/R,KAAKwP,MAAMnF,cAAe,EACpC6D,MAAO,CACH,QAAW,IACX,MAAS,SACT,OAAU,SACV,SAAY,WACZ,SAAY,SACZ,OAAU,SAItB,yBAAK8D,UAAU,WACX9D,MAAO,CACHC,QAASnO,KAAKwP,MAAMnF,YAAc,eAAiB,SAEvD,yBAAK2H,UAAU,eACX9D,MAAO,CACHgF,MAAOlT,KAAKwP,MAAM8B,YAAc,IAChCoC,OAAQ,WAnIf,KAuIJ7B,EACAM,EACAD,S,8BAtT8ByB,aAA9BrE,EAEVG,aAAe,CAClB6B,YAAa,EACblB,cAAe,GACf1I,SAAU,CAAElH,MAAO,IACnBmK,UAAU,EACVN,aAAa,EACbsH,WAAW,EACX1I,YAAY,EACZwH,oBAAoB,GAmT5BnB,EAAsBsE,UAAY,CAI9BnR,SAAUoR,IAAUC,OAKpBrQ,YAAaoQ,IAAUC,OAKvBpT,UAAWmT,IAAUC,OAKrBlT,oBAAqBiT,IAAUC,OAK/B5D,QAAS2D,IAAUE,OAKnB/B,UAAW6B,IAAUE,OAKrBrB,aAAcmB,IAAUE,OAKxBC,cAAeH,IAAUE,OAKzBE,YAAaJ,IAAUE,OAKvBnB,cAAeiB,IAAUE,OAKzBpB,eAAgBkB,IAAUE,OAK1BzB,aAAcuB,IAAUtU,OAKxB8S,YAAawB,IAAUtU,OAKvB6S,cAAeyB,IAAUtU,OAKzBqS,UAAWiC,IAAUE,OAKrB5C,iBAAkB0C,IAAUE,OAK5B9C,UAAW4C,IAAUK,QAAQL,IAAUE,QAKvC5D,UAAW0D,IAAUK,QAAQL,IAAUE,QAKvClC,YAAagC,IAAUM,KAKvBhC,YAAa0B,IAAUM,KAKvBjC,aAAc2B,IAAUM,KAKxB7D,mBAAoBuD,IAAUM,KAK9BjD,SAAU2C,IAAUjH,KAKpB2F,GAAIsB,IAAUE,QAclBzE,EAAsB8E,aAAe,CACjC3R,SAAU,EACVgB,YAAa,SACb/C,UAAW,QACX2T,oBAAqB,EACrBnE,QAAS,iBACT8B,UAAW,oBACXU,aAAc,oBACdE,cAAe,qBACfoB,cAAe,qBACfC,YAAa,mBACbtB,eAAgB,sBAChBL,aAAc,GACdD,YAAa,GACbD,cAAe,GACfR,UAAW,8BACXT,iBAAkB,aAClBF,UAAW,GACXd,eAAW5N,EACXsP,aAAa,EACbM,aAAa,EACbD,cAAc,EACd5B,oBAAoB,EACpBiC,GAAI,sBACJhB,2BAAuBhP,GC9d3B","file":"dash_uploader.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n","(function() { module.exports = window[\"PropTypes\"]; }());","(function() { module.exports = window[\"React\"]; }());","/*\n* MIT Licensed\n* http://www.23developer.com/opensource\n* http://github.com/23/resumable.js\n* Steffen Tiedemann Christensen, steffen@23company.com\n*/\n\n(function(){\n\"use strict\";\n\n  var Resumable = function(opts){\n    if ( !(this instanceof Resumable) ) {\n      return new Resumable(opts);\n    }\n    this.version = 1.0;\n    // SUPPORTED BY BROWSER?\n    // Check if these features are support by the browser:\n    // - File object type\n    // - Blob object type\n    // - FileList object type\n    // - slicing files\n    this.support = (\n                   (typeof(File)!=='undefined')\n                   &&\n                   (typeof(Blob)!=='undefined')\n                   &&\n                   (typeof(FileList)!=='undefined')\n                   &&\n                   (!!Blob.prototype.webkitSlice||!!Blob.prototype.mozSlice||!!Blob.prototype.slice||false)\n                   );\n    if(!this.support) return(false);\n\n\n    // PROPERTIES\n    var $ = this;\n    $.files = [];\n    $.defaults = {\n      chunkSize:1*1024*1024,\n      forceChunkSize:false,\n      simultaneousUploads:3,\n      fileParameterName:'file',\n      chunkNumberParameterName: 'resumableChunkNumber',\n      chunkSizeParameterName: 'resumableChunkSize',\n      currentChunkSizeParameterName: 'resumableCurrentChunkSize',\n      totalSizeParameterName: 'resumableTotalSize',\n      typeParameterName: 'resumableType',\n      identifierParameterName: 'resumableIdentifier',\n      fileNameParameterName: 'resumableFilename',\n      relativePathParameterName: 'resumableRelativePath',\n      totalChunksParameterName: 'resumableTotalChunks',\n      throttleProgressCallbacks: 0.5,\n      query:{},\n      headers:{},\n      preprocess:null,\n      method:'multipart',\n      uploadMethod: 'POST',\n      testMethod: 'GET',\n      prioritizeFirstAndLastChunk:false,\n      target:'/',\n      testTarget: null,\n      parameterNamespace:'',\n      testChunks:true,\n      generateUniqueIdentifier:null,\n      getTarget:null,\n      maxChunkRetries:100,\n      chunkRetryInterval:undefined,\n      permanentErrors:[400, 404, 415, 500, 501],\n      maxFiles:undefined,\n      withCredentials:false,\n      xhrTimeout:0,\n      clearInput:true,\n      chunkFormat:'blob',\n      setChunkTypeFromFile:false,\n      maxFilesErrorCallback:function (files, errorCount) {\n        var maxFiles = $.getOpt('maxFiles');\n        alert('Please upload no more than ' + maxFiles + ' file' + (maxFiles === 1 ? '' : 's') + ' at a time.');\n      },\n      minFileSize:1,\n      minFileSizeErrorCallback:function(file, errorCount) {\n        alert(file.fileName||file.name +' is too small, please upload files larger than ' + $h.formatSize($.getOpt('minFileSize')) + '.');\n      },\n      maxFileSize:undefined,\n      maxFileSizeErrorCallback:function(file, errorCount) {\n        alert(file.fileName||file.name +' is too large, please upload files less than ' + $h.formatSize($.getOpt('maxFileSize')) + '.');\n      },\n      fileType: [],\n      fileTypeErrorCallback: function(file, errorCount) {\n        alert(file.fileName||file.name +' has type not allowed, please upload files of type ' + $.getOpt('fileType') + '.');\n      }\n    };\n    $.opts = opts||{};\n    $.getOpt = function(o) {\n      var $opt = this;\n      // Get multiple option if passed an array\n      if(o instanceof Array) {\n        var options = {};\n        $h.each(o, function(option){\n          options[option] = $opt.getOpt(option);\n        });\n        return options;\n      }\n      // Otherwise, just return a simple option\n      if ($opt instanceof ResumableChunk) {\n        if (typeof $opt.opts[o] !== 'undefined') { return $opt.opts[o]; }\n        else { $opt = $opt.fileObj; }\n      }\n      if ($opt instanceof ResumableFile) {\n        if (typeof $opt.opts[o] !== 'undefined') { return $opt.opts[o]; }\n        else { $opt = $opt.resumableObj; }\n      }\n      if ($opt instanceof Resumable) {\n        if (typeof $opt.opts[o] !== 'undefined') { return $opt.opts[o]; }\n        else { return $opt.defaults[o]; }\n      }\n    };\n\n    // EVENTS\n    // catchAll(event, ...)\n    // fileSuccess(file), fileProgress(file), fileAdded(file, event), filesAdded(files, filesSkipped), fileRetry(file),\n    // fileError(file, message), complete(), progress(), error(message, file), pause()\n    $.events = [];\n    $.on = function(event,callback){\n      $.events.push(event.toLowerCase(), callback);\n    };\n    $.fire = function(){\n      // `arguments` is an object, not array, in FF, so:\n      var args = [];\n      for (var i=0; i<arguments.length; i++) args.push(arguments[i]);\n      // Find event listeners, and support pseudo-event `catchAll`\n      var event = args[0].toLowerCase();\n      for (var i=0; i<=$.events.length; i+=2) {\n        if($.events[i]==event) $.events[i+1].apply($,args.slice(1));\n        if($.events[i]=='catchall') $.events[i+1].apply(null,args);\n      }\n      if(event=='fileerror') $.fire('error', args[2], args[1]);\n      if(event=='fileprogress') $.fire('progress');\n    };\n\n\n    // INTERNAL HELPER METHODS (handy, but ultimately not part of uploading)\n    var $h = {\n      stopEvent: function(e){\n        e.stopPropagation();\n        e.preventDefault();\n      },\n      each: function(o,callback){\n        if(typeof(o.length)!=='undefined') {\n          for (var i=0; i<o.length; i++) {\n            // Array or FileList\n            if(callback(o[i])===false) return;\n          }\n        } else {\n          for (i in o) {\n            // Object\n            if(callback(i,o[i])===false) return;\n          }\n        }\n      },\n      generateUniqueIdentifier:function(file, event){\n        var custom = $.getOpt('generateUniqueIdentifier');\n        if(typeof custom === 'function') {\n          return custom(file, event);\n        }\n        var relativePath = file.webkitRelativePath||file.fileName||file.name; // Some confusion in different versions of Firefox\n        var size = file.size;\n        return(size + '-' + relativePath.replace(/[^0-9a-zA-Z_-]/img, ''));\n      },\n      contains:function(array,test) {\n        var result = false;\n\n        $h.each(array, function(value) {\n          if (value == test) {\n            result = true;\n            return false;\n          }\n          return true;\n        });\n\n        return result;\n      },\n      formatSize:function(size){\n        if(size<1024) {\n          return size + ' bytes';\n        } else if(size<1024*1024) {\n          return (size/1024.0).toFixed(0) + ' KB';\n        } else if(size<1024*1024*1024) {\n          return (size/1024.0/1024.0).toFixed(1) + ' MB';\n        } else {\n          return (size/1024.0/1024.0/1024.0).toFixed(1) + ' GB';\n        }\n      },\n      getTarget:function(request, params){\n        var target = $.getOpt('target');\n\n        if (request === 'test' && $.getOpt('testTarget')) {\n          target = $.getOpt('testTarget') === '/' ? $.getOpt('target') : $.getOpt('testTarget');\n        }\n\n        if (typeof target === 'function') {\n          return target(params);\n        }\n\n        var separator = target.indexOf('?') < 0 ? '?' : '&';\n        var joinedParams = params.join('&');\n\n        return target + separator + joinedParams;\n      }\n    };\n\n    var onDrop = function(event){\n      $h.stopEvent(event);\n\n      //handle dropped things as items if we can (this lets us deal with folders nicer in some cases)\n      if (event.dataTransfer && event.dataTransfer.items) {\n        loadFiles(event.dataTransfer.items, event);\n      }\n      //else handle them as files\n      else if (event.dataTransfer && event.dataTransfer.files) {\n        loadFiles(event.dataTransfer.files, event);\n      }\n    };\n    var preventDefault = function(e) {\n      e.preventDefault();\n    };\n\n    /**\n     * processes a single upload item (file or directory)\n     * @param {Object} item item to upload, may be file or directory entry\n     * @param {string} path current file path\n     * @param {File[]} items list of files to append new items to\n     * @param {Function} cb callback invoked when item is processed\n     */\n    function processItem(item, path, items, cb) {\n      var entry;\n      if(item.isFile){\n        // file provided\n        return item.file(function(file){\n          file.relativePath = path + file.name;\n          items.push(file);\n          cb();\n        });\n      }else if(item.isDirectory){\n        // item is already a directory entry, just assign\n        entry = item;\n      }else if(item instanceof File) {\n        items.push(item);\n      }\n      if('function' === typeof item.webkitGetAsEntry){\n        // get entry from file object\n        entry = item.webkitGetAsEntry();\n      }\n      if(entry && entry.isDirectory){\n        // directory provided, process it\n        return processDirectory(entry, path + entry.name + '/', items, cb);\n      }\n      if('function' === typeof item.getAsFile){\n        // item represents a File object, convert it\n        item = item.getAsFile();\n        if(item instanceof File) {\n          item.relativePath = path + item.name;\n          items.push(item);\n        }\n      }\n      cb(); // indicate processing is done\n    }\n\n\n    /**\n     * cps-style list iteration.\n     * invokes all functions in list and waits for their callback to be\n     * triggered.\n     * @param  {Function[]}   items list of functions expecting callback parameter\n     * @param  {Function} cb    callback to trigger after the last callback has been invoked\n     */\n    function processCallbacks(items, cb){\n      if(!items || items.length === 0){\n        // empty or no list, invoke callback\n        return cb();\n      }\n      // invoke current function, pass the next part as continuation\n      items[0](function(){\n        processCallbacks(items.slice(1), cb);\n      });\n    }\n\n    /**\n     * recursively traverse directory and collect files to upload\n     * @param  {Object}   directory directory to process\n     * @param  {string}   path      current path\n     * @param  {File[]}   items     target list of items\n     * @param  {Function} cb        callback invoked after traversing directory\n     */\n    function processDirectory (directory, path, items, cb) {\n      var dirReader = directory.createReader();\n      dirReader.readEntries(function(entries){\n        if(!entries.length){\n          // empty directory, skip\n          return cb();\n        }\n        // process all conversion callbacks, finally invoke own one\n        processCallbacks(\n          entries.map(function(entry){\n            // bind all properties except for callback\n            return processItem.bind(null, entry, path, items);\n          }),\n          cb\n        );\n      });\n    }\n\n    /**\n     * process items to extract files to be uploaded\n     * @param  {File[]} items items to process\n     * @param  {Event} event event that led to upload\n     */\n    function loadFiles(items, event) {\n      if(!items.length){\n        return; // nothing to do\n      }\n      $.fire('beforeAdd');\n      var files = [];\n      processCallbacks(\n          Array.prototype.map.call(items, function(item){\n            // bind all properties except for callback\n            return processItem.bind(null, item, \"\", files);\n          }),\n          function(){\n            if(files.length){\n              // at least one file found\n              appendFilesFromFileList(files, event);\n            }\n          }\n      );\n    };\n\n    var appendFilesFromFileList = function(fileList, event){\n      // check for uploading too many files\n      var errorCount = 0;\n      var o = $.getOpt(['maxFiles', 'minFileSize', 'maxFileSize', 'maxFilesErrorCallback', 'minFileSizeErrorCallback', 'maxFileSizeErrorCallback', 'fileType', 'fileTypeErrorCallback']);\n      if (typeof(o.maxFiles)!=='undefined' && o.maxFiles<(fileList.length+$.files.length)) {\n        // if single-file upload, file is already added, and trying to add 1 new file, simply replace the already-added file\n        if (o.maxFiles===1 && $.files.length===1 && fileList.length===1) {\n          $.removeFile($.files[0]);\n        } else {\n          o.maxFilesErrorCallback(fileList, errorCount++);\n          return false;\n        }\n      }\n      var files = [], filesSkipped = [], remaining = fileList.length;\n      var decreaseReamining = function(){\n        if(!--remaining){\n          // all files processed, trigger event\n          if(!files.length && !filesSkipped.length){\n            // no succeeded files, just skip\n            return;\n          }\n          window.setTimeout(function(){\n            $.fire('filesAdded', files, filesSkipped);\n          },0);\n        }\n      };\n      $h.each(fileList, function(file){\n        var fileName = file.name;\n        if(o.fileType.length > 0){\n          var fileTypeFound = false;\n          for(var index in o.fileType){\n            var extension = '.' + o.fileType[index];\n\t\t\tif(fileName.toLowerCase().indexOf(extension.toLowerCase(), fileName.length - extension.length) !== -1){\n              fileTypeFound = true;\n              break;\n            }\n          }\n          if (!fileTypeFound) {\n            o.fileTypeErrorCallback(file, errorCount++);\n            return false;\n          }\n        }\n\n        if (typeof(o.minFileSize)!=='undefined' && file.size<o.minFileSize) {\n          o.minFileSizeErrorCallback(file, errorCount++);\n          return false;\n        }\n        if (typeof(o.maxFileSize)!=='undefined' && file.size>o.maxFileSize) {\n          o.maxFileSizeErrorCallback(file, errorCount++);\n          return false;\n        }\n\n        function addFile(uniqueIdentifier){\n          if (!$.getFromUniqueIdentifier(uniqueIdentifier)) {(function(){\n            file.uniqueIdentifier = uniqueIdentifier;\n            var f = new ResumableFile($, file, uniqueIdentifier);\n            $.files.push(f);\n            files.push(f);\n            f.container = (typeof event != 'undefined' ? event.srcElement : null);\n            window.setTimeout(function(){\n              $.fire('fileAdded', f, event)\n            },0);\n          })()} else {\n            filesSkipped.push(file);\n          };\n          decreaseReamining();\n        }\n        // directories have size == 0\n        var uniqueIdentifier = $h.generateUniqueIdentifier(file, event);\n        if(uniqueIdentifier && typeof uniqueIdentifier.then === 'function'){\n          // Promise or Promise-like object provided as unique identifier\n          uniqueIdentifier\n          .then(\n            function(uniqueIdentifier){\n              // unique identifier generation succeeded\n              addFile(uniqueIdentifier);\n            },\n           function(){\n              // unique identifier generation failed\n              // skip further processing, only decrease file count\n              decreaseReamining();\n            }\n          );\n        }else{\n          // non-Promise provided as unique identifier, process synchronously\n          addFile(uniqueIdentifier);\n        }\n      });\n    };\n\n    // INTERNAL OBJECT TYPES\n    function ResumableFile(resumableObj, file, uniqueIdentifier){\n      var $ = this;\n      $.opts = {};\n      $.getOpt = resumableObj.getOpt;\n      $._prevProgress = 0;\n      $.resumableObj = resumableObj;\n      $.file = file;\n      $.fileName = file.fileName||file.name; // Some confusion in different versions of Firefox\n      $.size = file.size;\n      $.relativePath = file.relativePath || file.webkitRelativePath || $.fileName;\n      $.uniqueIdentifier = uniqueIdentifier;\n      $._pause = false;\n      $.container = '';\n      var _error = uniqueIdentifier !== undefined;\n\n      // Callback when something happens within the chunk\n      var chunkEvent = function(event, message){\n        // event can be 'progress', 'success', 'error' or 'retry'\n        switch(event){\n        case 'progress':\n          $.resumableObj.fire('fileProgress', $, message);\n          break;\n        case 'error':\n          $.abort();\n          _error = true;\n          $.chunks = [];\n          $.resumableObj.fire('fileError', $, message);\n          break;\n        case 'success':\n          if(_error) return;\n          $.resumableObj.fire('fileProgress', $); // it's at least progress\n          if($.isComplete()) {\n            $.resumableObj.fire('fileSuccess', $, message);\n          }\n          break;\n        case 'retry':\n          $.resumableObj.fire('fileRetry', $);\n          break;\n        }\n      };\n\n      // Main code to set up a file object with chunks,\n      // packaged to be able to handle retries if needed.\n      $.chunks = [];\n      $.abort = function(){\n        // Stop current uploads\n        var abortCount = 0;\n        $h.each($.chunks, function(c){\n          if(c.status()=='uploading') {\n            c.abort();\n            abortCount++;\n          }\n        });\n        if(abortCount>0) $.resumableObj.fire('fileProgress', $);\n      };\n      $.cancel = function(){\n        // Reset this file to be void\n        var _chunks = $.chunks;\n        $.chunks = [];\n        // Stop current uploads\n        $h.each(_chunks, function(c){\n          if(c.status()=='uploading')  {\n            c.abort();\n            $.resumableObj.uploadNextChunk();\n          }\n        });\n        $.resumableObj.removeFile($);\n        $.resumableObj.fire('fileProgress', $);\n      };\n      $.retry = function(){\n        $.bootstrap();\n        var firedRetry = false;\n        $.resumableObj.on('chunkingComplete', function(){\n          if(!firedRetry) $.resumableObj.upload();\n          firedRetry = true;\n        });\n      };\n      $.bootstrap = function(){\n        $.abort();\n        _error = false;\n        // Rebuild stack of chunks from file\n        $.chunks = [];\n        $._prevProgress = 0;\n        var round = $.getOpt('forceChunkSize') ? Math.ceil : Math.floor;\n        var maxOffset = Math.max(round($.file.size/$.getOpt('chunkSize')),1);\n        for (var offset=0; offset<maxOffset; offset++) {(function(offset){\n            window.setTimeout(function(){\n                $.chunks.push(new ResumableChunk($.resumableObj, $, offset, chunkEvent));\n                $.resumableObj.fire('chunkingProgress',$,offset/maxOffset);\n            },0);\n        })(offset)}\n        window.setTimeout(function(){\n            $.resumableObj.fire('chunkingComplete',$);\n        },0);\n      };\n      $.progress = function(){\n        if(_error) return(1);\n        // Sum up progress across everything\n        var ret = 0;\n        var error = false;\n        $h.each($.chunks, function(c){\n          if(c.status()=='error') error = true;\n          ret += c.progress(true); // get chunk progress relative to entire file\n        });\n        ret = (error ? 1 : (ret>0.99999 ? 1 : ret));\n        ret = Math.max($._prevProgress, ret); // We don't want to lose percentages when an upload is paused\n        $._prevProgress = ret;\n        return(ret);\n      };\n      $.isUploading = function(){\n        var uploading = false;\n        $h.each($.chunks, function(chunk){\n          if(chunk.status()=='uploading') {\n            uploading = true;\n            return(false);\n          }\n        });\n        return(uploading);\n      };\n      $.isComplete = function(){\n        var outstanding = false;\n        $h.each($.chunks, function(chunk){\n          var status = chunk.status();\n          if(status=='pending' || status=='uploading' || chunk.preprocessState === 1) {\n            outstanding = true;\n            return(false);\n          }\n        });\n        return(!outstanding);\n      };\n      $.pause = function(pause){\n          if(typeof(pause)==='undefined'){\n              $._pause = ($._pause ? false : true);\n          }else{\n              $._pause = pause;\n          }\n      };\n      $.isPaused = function() {\n        return $._pause;\n      };\n\n\n      // Bootstrap and return\n      $.resumableObj.fire('chunkingStart', $);\n      $.bootstrap();\n      return(this);\n    }\n\n\n    function ResumableChunk(resumableObj, fileObj, offset, callback){\n      var $ = this;\n      $.opts = {};\n      $.getOpt = resumableObj.getOpt;\n      $.resumableObj = resumableObj;\n      $.fileObj = fileObj;\n      $.fileObjSize = fileObj.size;\n      $.fileObjType = fileObj.file.type;\n      $.offset = offset;\n      $.callback = callback;\n      $.lastProgressCallback = (new Date);\n      $.tested = false;\n      $.retries = 0;\n      $.pendingRetry = false;\n      $.preprocessState = 0; // 0 = unprocessed, 1 = processing, 2 = finished\n\n      // Computed properties\n      var chunkSize = $.getOpt('chunkSize');\n      $.loaded = 0;\n      $.startByte = $.offset*chunkSize;\n      $.endByte = Math.min($.fileObjSize, ($.offset+1)*chunkSize);\n      if ($.fileObjSize-$.endByte < chunkSize && !$.getOpt('forceChunkSize')) {\n        // The last chunk will be bigger than the chunk size, but less than 2*chunkSize\n        $.endByte = $.fileObjSize;\n      }\n      $.xhr = null;\n\n      // test() makes a GET request without any data to see if the chunk has already been uploaded in a previous session\n      $.test = function(){\n        // Set up request and listen for event\n        $.xhr = new XMLHttpRequest();\n\n        var testHandler = function(e){\n          $.tested = true;\n          var status = $.status();\n          if(status=='success') {\n            $.callback(status, $.message());\n            $.resumableObj.uploadNextChunk();\n          } else {\n            $.send();\n          }\n        };\n        $.xhr.addEventListener('load', testHandler, false);\n        $.xhr.addEventListener('error', testHandler, false);\n        $.xhr.addEventListener('timeout', testHandler, false);\n\n        // Add data from the query options\n        var params = [];\n        var parameterNamespace = $.getOpt('parameterNamespace');\n        var customQuery = $.getOpt('query');\n        if(typeof customQuery == 'function') customQuery = customQuery($.fileObj, $);\n        $h.each(customQuery, function(k,v){\n          params.push([encodeURIComponent(parameterNamespace+k), encodeURIComponent(v)].join('='));\n        });\n        // Add extra data to identify chunk\n        params = params.concat(\n          [\n            // define key/value pairs for additional parameters\n            ['chunkNumberParameterName', $.offset + 1],\n            ['chunkSizeParameterName', $.getOpt('chunkSize')],\n            ['currentChunkSizeParameterName', $.endByte - $.startByte],\n            ['totalSizeParameterName', $.fileObjSize],\n            ['typeParameterName', $.fileObjType],\n            ['identifierParameterName', $.fileObj.uniqueIdentifier],\n            ['fileNameParameterName', $.fileObj.fileName],\n            ['relativePathParameterName', $.fileObj.relativePath],\n            ['totalChunksParameterName', $.fileObj.chunks.length]\n          ].filter(function(pair){\n            // include items that resolve to truthy values\n            // i.e. exclude false, null, undefined and empty strings\n            return $.getOpt(pair[0]);\n          })\n          .map(function(pair){\n            // map each key/value pair to its final form\n            return [\n              parameterNamespace + $.getOpt(pair[0]),\n              encodeURIComponent(pair[1])\n            ].join('=');\n          })\n        );\n        // Append the relevant chunk and send it\n        $.xhr.open($.getOpt('testMethod'), $h.getTarget('test', params));\n        $.xhr.timeout = $.getOpt('xhrTimeout');\n        $.xhr.withCredentials = $.getOpt('withCredentials');\n        // Add data from header options\n        var customHeaders = $.getOpt('headers');\n        if(typeof customHeaders === 'function') {\n          customHeaders = customHeaders($.fileObj, $);\n        }\n        $h.each(customHeaders, function(k,v) {\n          $.xhr.setRequestHeader(k, v);\n        });\n        $.xhr.send(null);\n      };\n\n      $.preprocessFinished = function(){\n        $.preprocessState = 2;\n        $.send();\n      };\n\n      // send() uploads the actual data in a POST call\n      $.send = function(){\n        var preprocess = $.getOpt('preprocess');\n        if(typeof preprocess === 'function') {\n          switch($.preprocessState) {\n          case 0: $.preprocessState = 1; preprocess($); return;\n          case 1: return;\n          case 2: break;\n          }\n        }\n        if($.getOpt('testChunks') && !$.tested) {\n          $.test();\n          return;\n        }\n\n        // Set up request and listen for event\n        $.xhr = new XMLHttpRequest();\n\n        // Progress\n        $.xhr.upload.addEventListener('progress', function(e){\n          if( (new Date) - $.lastProgressCallback > $.getOpt('throttleProgressCallbacks') * 1000 ) {\n            $.callback('progress');\n            $.lastProgressCallback = (new Date);\n          }\n          $.loaded=e.loaded||0;\n        }, false);\n        $.loaded = 0;\n        $.pendingRetry = false;\n        $.callback('progress');\n\n        // Done (either done, failed or retry)\n        var doneHandler = function(e){\n          var status = $.status();\n          if(status=='success'||status=='error') {\n            $.callback(status, $.message());\n            $.resumableObj.uploadNextChunk();\n          } else {\n            $.callback('retry', $.message());\n            $.abort();\n            $.retries++;\n            var retryInterval = $.getOpt('chunkRetryInterval');\n            if(retryInterval !== undefined) {\n              $.pendingRetry = true;\n              setTimeout($.send, retryInterval);\n            } else {\n              $.send();\n            }\n          }\n        };\n        $.xhr.addEventListener('load', doneHandler, false);\n        $.xhr.addEventListener('error', doneHandler, false);\n        $.xhr.addEventListener('timeout', doneHandler, false);\n\n        // Set up the basic query data from Resumable\n        var query = [\n          ['chunkNumberParameterName', $.offset + 1],\n          ['chunkSizeParameterName', $.getOpt('chunkSize')],\n          ['currentChunkSizeParameterName', $.endByte - $.startByte],\n          ['totalSizeParameterName', $.fileObjSize],\n          ['typeParameterName', $.fileObjType],\n          ['identifierParameterName', $.fileObj.uniqueIdentifier],\n          ['fileNameParameterName', $.fileObj.fileName],\n          ['relativePathParameterName', $.fileObj.relativePath],\n          ['totalChunksParameterName', $.fileObj.chunks.length],\n        ].filter(function(pair){\n          // include items that resolve to truthy values\n          // i.e. exclude false, null, undefined and empty strings\n          return $.getOpt(pair[0]);\n        })\n        .reduce(function(query, pair){\n          // assign query key/value\n          query[$.getOpt(pair[0])] = pair[1];\n          return query;\n        }, {});\n        // Mix in custom data\n        var customQuery = $.getOpt('query');\n        if(typeof customQuery == 'function') customQuery = customQuery($.fileObj, $);\n        $h.each(customQuery, function(k,v){\n          query[k] = v;\n        });\n\n        var func = ($.fileObj.file.slice ? 'slice' : ($.fileObj.file.mozSlice ? 'mozSlice' : ($.fileObj.file.webkitSlice ? 'webkitSlice' : 'slice')));\n        var bytes = $.fileObj.file[func]($.startByte, $.endByte, $.getOpt('setChunkTypeFromFile') ? $.fileObj.file.type : \"\");\n        var data = null;\n        var params = [];\n\n        var parameterNamespace = $.getOpt('parameterNamespace');\n                if ($.getOpt('method') === 'octet') {\n                    // Add data from the query options\n                    data = bytes;\n                    $h.each(query, function (k, v) {\n                        params.push([encodeURIComponent(parameterNamespace + k), encodeURIComponent(v)].join('='));\n                    });\n                } else {\n                    // Add data from the query options\n                    data = new FormData();\n                    $h.each(query, function (k, v) {\n                        data.append(parameterNamespace + k, v);\n                        params.push([encodeURIComponent(parameterNamespace + k), encodeURIComponent(v)].join('='));\n                    });\n                    if ($.getOpt('chunkFormat') == 'blob') {\n                        data.append(parameterNamespace + $.getOpt('fileParameterName'), bytes, $.fileObj.fileName);\n                    }\n                    else if ($.getOpt('chunkFormat') == 'base64') {\n                        var fr = new FileReader();\n                        fr.onload = function (e) {\n                            data.append(parameterNamespace + $.getOpt('fileParameterName'), fr.result);\n                            $.xhr.send(data);\n                        }\n                        fr.readAsDataURL(bytes);\n                    }\n                }\n\n        var target = $h.getTarget('upload', params);\n        var method = $.getOpt('uploadMethod');\n\n        $.xhr.open(method, target);\n        if ($.getOpt('method') === 'octet') {\n          $.xhr.setRequestHeader('Content-Type', 'application/octet-stream');\n        }\n        $.xhr.timeout = $.getOpt('xhrTimeout');\n        $.xhr.withCredentials = $.getOpt('withCredentials');\n        // Add data from header options\n        var customHeaders = $.getOpt('headers');\n        if(typeof customHeaders === 'function') {\n          customHeaders = customHeaders($.fileObj, $);\n        }\n\n        $h.each(customHeaders, function(k,v) {\n          $.xhr.setRequestHeader(k, v);\n        });\n\n                if ($.getOpt('chunkFormat') == 'blob') {\n                    $.xhr.send(data);\n                }\n      };\n      $.abort = function(){\n        // Abort and reset\n        if($.xhr) $.xhr.abort();\n        $.xhr = null;\n      };\n      $.status = function(){\n        // Returns: 'pending', 'uploading', 'success', 'error'\n        if($.pendingRetry) {\n          // if pending retry then that's effectively the same as actively uploading,\n          // there might just be a slight delay before the retry starts\n          return('uploading');\n        } else if(!$.xhr) {\n          return('pending');\n        } else if($.xhr.readyState<4) {\n          // Status is really 'OPENED', 'HEADERS_RECEIVED' or 'LOADING' - meaning that stuff is happening\n          return('uploading');\n        } else {\n          if($.xhr.status == 200 || $.xhr.status == 201) {\n            // HTTP 200, 201 (created)\n            return('success');\n          } else if($h.contains($.getOpt('permanentErrors'), $.xhr.status) || $.retries >= $.getOpt('maxChunkRetries')) {\n            // HTTP 415/500/501, permanent error\n            return('error');\n          } else {\n            // this should never happen, but we'll reset and queue a retry\n            // a likely case for this would be 503 service unavailable\n            $.abort();\n            return('pending');\n          }\n        }\n      };\n      $.message = function(){\n        return($.xhr ? $.xhr.responseText : '');\n      };\n      $.progress = function(relative){\n        if(typeof(relative)==='undefined') relative = false;\n        var factor = (relative ? ($.endByte-$.startByte)/$.fileObjSize : 1);\n        if($.pendingRetry) return(0);\n        if(!$.xhr || !$.xhr.status) factor*=.95;\n        var s = $.status();\n        switch(s){\n        case 'success':\n        case 'error':\n          return(1*factor);\n        case 'pending':\n          return(0*factor);\n        default:\n          return($.loaded/($.endByte-$.startByte)*factor);\n        }\n      };\n      return(this);\n    }\n\n    // QUEUE\n    $.uploadNextChunk = function(){\n      var found = false;\n\n      // In some cases (such as videos) it's really handy to upload the first\n      // and last chunk of a file quickly; this let's the server check the file's\n      // metadata and determine if there's even a point in continuing.\n      if ($.getOpt('prioritizeFirstAndLastChunk')) {\n        $h.each($.files, function(file){\n          if(file.chunks.length && file.chunks[0].status()=='pending' && file.chunks[0].preprocessState === 0) {\n            file.chunks[0].send();\n            found = true;\n            return(false);\n          }\n          if(file.chunks.length>1 && file.chunks[file.chunks.length-1].status()=='pending' && file.chunks[file.chunks.length-1].preprocessState === 0) {\n            file.chunks[file.chunks.length-1].send();\n            found = true;\n            return(false);\n          }\n        });\n        if(found) return(true);\n      }\n\n      // Now, simply look for the next, best thing to upload\n      $h.each($.files, function(file){\n        if(file.isPaused()===false){\n         $h.each(file.chunks, function(chunk){\n           if(chunk.status()=='pending' && chunk.preprocessState === 0) {\n             chunk.send();\n             found = true;\n             return(false);\n           }\n          });\n        }\n        if(found) return(false);\n      });\n      if(found) return(true);\n\n      // The are no more outstanding chunks to upload, check is everything is done\n      var outstanding = false;\n      $h.each($.files, function(file){\n        if(!file.isComplete()) {\n          outstanding = true;\n          return(false);\n        }\n      });\n      if(!outstanding) {\n        // All chunks have been uploaded, complete\n        $.fire('complete');\n      }\n      return(false);\n    };\n\n\n    // PUBLIC METHODS FOR RESUMABLE.JS\n    $.assignBrowse = function(domNodes, isDirectory){\n      if(typeof(domNodes.length)=='undefined') domNodes = [domNodes];\n\n      $h.each(domNodes, function(domNode) {\n        var input;\n        if(domNode.tagName==='INPUT' && domNode.type==='file'){\n          input = domNode;\n        } else {\n          input = document.createElement('input');\n          input.setAttribute('type', 'file');\n          input.style.display = 'none';\n          domNode.addEventListener('click', function(){\n            input.style.opacity = 0;\n            input.style.display='block';\n            input.focus();\n            input.click();\n            input.style.display='none';\n          }, false);\n          domNode.appendChild(input);\n        }\n        var maxFiles = $.getOpt('maxFiles');\n        if (typeof(maxFiles)==='undefined'||maxFiles!=1){\n          input.setAttribute('multiple', 'multiple');\n        } else {\n          input.removeAttribute('multiple');\n        }\n        if(isDirectory){\n          input.setAttribute('webkitdirectory', 'webkitdirectory');\n        } else {\n          input.removeAttribute('webkitdirectory');\n        }\n        var fileTypes = $.getOpt('fileType');\n        if (typeof (fileTypes) !== 'undefined' && fileTypes.length >= 1) {\n          input.setAttribute('accept', fileTypes.map(function (e) { return '.' + e }).join(','));\n        }\n        else {\n          input.removeAttribute('accept');\n        }\n        // When new files are added, simply append them to the overall list\n        input.addEventListener('change', function(e){\n          appendFilesFromFileList(e.target.files,e);\n          var clearInput = $.getOpt('clearInput');\n          if (clearInput) {\n            e.target.value = '';\n          }\n        }, false);\n      });\n    };\n    $.assignDrop = function(domNodes){\n      if(typeof(domNodes.length)=='undefined') domNodes = [domNodes];\n\n      $h.each(domNodes, function(domNode) {\n        domNode.addEventListener('dragover', preventDefault, false);\n        domNode.addEventListener('dragenter', preventDefault, false);\n        domNode.addEventListener('drop', onDrop, false);\n      });\n    };\n    $.unAssignDrop = function(domNodes) {\n      if (typeof(domNodes.length) == 'undefined') domNodes = [domNodes];\n\n      $h.each(domNodes, function(domNode) {\n        domNode.removeEventListener('dragover', preventDefault);\n        domNode.removeEventListener('dragenter', preventDefault);\n        domNode.removeEventListener('drop', onDrop);\n      });\n    };\n    $.isUploading = function(){\n      var uploading = false;\n      $h.each($.files, function(file){\n        if (file.isUploading()) {\n          uploading = true;\n          return(false);\n        }\n      });\n      return(uploading);\n    };\n    $.upload = function(){\n      // Make sure we don't start too many uploads at once\n      if($.isUploading()) return;\n      // Kick off the queue\n      $.fire('uploadStart');\n      for (var num=1; num<=$.getOpt('simultaneousUploads'); num++) {\n        $.uploadNextChunk();\n      }\n    };\n    $.pause = function(){\n      // Resume all chunks currently being uploaded\n      $h.each($.files, function(file){\n        file.abort();\n      });\n      $.fire('pause');\n    };\n    $.cancel = function(){\n      $.fire('beforeCancel');\n      for(var i = $.files.length - 1; i >= 0; i--) {\n        $.files[i].cancel();\n      }\n      $.fire('cancel');\n    };\n    $.progress = function(){\n      var totalDone = 0;\n      var totalSize = 0;\n      // Resume all chunks currently being uploaded\n      $h.each($.files, function(file){\n        totalDone += file.progress()*file.size;\n        totalSize += file.size;\n      });\n      return(totalSize>0 ? totalDone/totalSize : 0);\n    };\n    $.addFile = function(file, event){\n      appendFilesFromFileList([file], event);\n    };\n    $.addFiles = function(files, event){\n      appendFilesFromFileList(files, event);\n    };\n    $.removeFile = function(file){\n      for(var i = $.files.length - 1; i >= 0; i--) {\n        if($.files[i] === file) {\n          $.files.splice(i, 1);\n        }\n      }\n    };\n    $.getFromUniqueIdentifier = function(uniqueIdentifier){\n      var ret = false;\n      $h.each($.files, function(f){\n        if(f.uniqueIdentifier==uniqueIdentifier) ret = f;\n      });\n      return(ret);\n    };\n    $.getSize = function(){\n      var totalSize = 0;\n      $h.each($.files, function(file){\n        totalSize += file.size;\n      });\n      return(totalSize);\n    };\n    $.handleDropEvent = function (e) {\n      onDrop(e);\n    };\n    $.handleChangeEvent = function (e) {\n      appendFilesFromFileList(e.target.files, e);\n      e.target.value = '';\n    };\n    $.updateQuery = function(query){\n        $.opts.query = query;\n    };\n\n    return(this);\n  };\n\n\n  // Node.js-style export for Node and Component\n  if (typeof module != 'undefined') {\n    module.exports = Resumable;\n  } else if (typeof define === \"function\" && define.amd) {\n    // AMD/requirejs: Define the module\n    define(function(){\n      return Resumable;\n    });\n  } else {\n    // Browser: Expose to window\n    window.Resumable = Resumable;\n  }\n\n})();\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Resumablejs from 'resumablejs';\r\n\r\nexport default class Upload_ReactComponent extends Component {\r\n\r\n    static initialState = {\r\n        progressBar: 0,\r\n        messageStatus: '',\r\n        fileList: { files: [] },\r\n        isPaused: false,\r\n        isUploading: false,\r\n        isHovered: false,\r\n        isComplete: false,\r\n        showEnabledButtons: false\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = Upload_ReactComponent.initialState;\r\n        this.toggleHovered = this.toggleHovered.bind(this)\r\n        this.cancelUpload = this.cancelUpload.bind(this)\r\n        this.pauseUpload = this.pauseUpload.bind(this)\r\n        this.startUpload = this.startUpload.bind(this)\r\n        this.resumable = null;\r\n    }\r\n\r\n    resetBuilder() {\r\n        this.setState(Upload_ReactComponent.initialState)\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        const ResumableField = new Resumablejs({\r\n            target: this.props.service,\r\n            query: {},\r\n            fileType: this.props.filetypes,\r\n            maxFiles: this.props.maxFiles,\r\n            maxFileSize: this.props.maxFileSize,\r\n            fileTypeErrorCallback: () => {\r\n                this.setState({\r\n                    messageStatus: 'Invalid file type!'\r\n                });\r\n            },\r\n            testMethod: 'post',\r\n            testChunks: false,\r\n            headers: {},\r\n            chunkSize: this.props.chunkSize,\r\n            simultaneousUploads: this.props.simultaneousUploads,\r\n            forceChunkSize: false\r\n        });\r\n\r\n        // Clicking the component will open upload dialog \r\n        ResumableField.assignBrowse(this.uploader);\r\n\r\n        // Enable or Disable DragAnd Drop\r\n        if (this.props.disableDragAndDrop === false) {\r\n            ResumableField.assignDrop(this.dropZone);\r\n        }\r\n\r\n        ResumableField.on('fileAdded', (file) => {\r\n            this.setState({\r\n                messageStatus: this.props.fileAddedMessage || ' Starting upload! of ' + file.fileName,\r\n                isComplete: false,\r\n                showEnabledButtons: true\r\n            });\r\n\r\n            if (typeof this.props.onFileAdded === 'function') {\r\n                this.props.onFileAdded(file, this.resumable);\r\n            } else {\r\n                ResumableField.upload();\r\n            }\r\n        });\r\n\r\n        // Uploading a file is completed\r\n        ResumableField.on('fileSuccess', (file, fileServer) => {\r\n\r\n            if (this.props.fileNameServer) {\r\n                const objectServer = JSON.parse(fileServer);\r\n                file.fileName = objectServer[this.props.fileNameServer];\r\n            } else {\r\n                file.fileName = fileServer;\r\n            }\r\n            const currentFiles = this.state.fileList.files;\r\n            currentFiles.push(file);\r\n\r\n            const fileNames = this.props.fileNames\r\n            fileNames.push(file.fileName);\r\n\r\n            if (this.props.setProps) {\r\n                this.props.setProps({\r\n                    fileNames: fileNames\r\n                });\r\n            }\r\n            this.setState({\r\n                fileList: { files: currentFiles },\r\n                isComplete: true,\r\n                showEnabledButtons: false,\r\n                messageStatus: this.props.completedMessage + file.fileName || fileServer\r\n            }, () => {\r\n                if (typeof this.props.onFileSuccess === 'function') {\r\n                    this.props.onFileSuccess(file, fileServer);\r\n                }\r\n            });\r\n        });\r\n\r\n        ResumableField.on('progress', () => {\r\n\r\n\r\n            this.setState({\r\n                isUploading: ResumableField.isUploading()\r\n            });\r\n\r\n            if ((ResumableField.progress() * 100) < 100) {\r\n                this.setState({\r\n                    messageStatus: parseInt(ResumableField.progress() * 100, 10) + '%',\r\n                    progressBar: ResumableField.progress() * 100\r\n                });\r\n            } else {\r\n                setTimeout(() => {\r\n                    this.setState({\r\n                        progressBar: 0\r\n                    })\r\n                }, 1000);\r\n            }\r\n\r\n        });\r\n\r\n        ResumableField.on('fileError', (file, errorCount) => {\r\n\r\n            if (typeof (this.props.onUploadErrorCallback) !== 'undefined') {\r\n                this.props.onUploadErrorCallback(file, errorCount);\r\n            } else {\r\n                console.log('fileError with resumable.js! (file, errorCount)', file, errorCount)\r\n            }\r\n\r\n        });\r\n\r\n        this.resumable = ResumableField;\r\n    }\r\n\r\n\r\n    cancelUpload() {\r\n        this.resumable.cancel();\r\n        this.resetBuilder();\r\n    }\r\n\r\n    pauseUpload() {\r\n        if (!this.state.isPaused) {\r\n            this.resumable.pause();\r\n            this.setState({\r\n                isPaused: true,\r\n                isUploading: true\r\n            });\r\n        } else {\r\n            this.resumable.upload();\r\n            this.setState({\r\n                isPaused: false,\r\n                isUploading: true\r\n            });\r\n        }\r\n    }\r\n\r\n    startUpload() {\r\n        this.setState({\r\n            isPaused: false\r\n        });\r\n    }\r\n\r\n    toggleHovered() {\r\n        this.setState({\r\n            isHovered: !this.state.isHovered\r\n        })\r\n    }\r\n\r\n    render() {\r\n\r\n        const fileList = null;\r\n\r\n        let textLabel = null;\r\n        if (this.props.textLabel) {\r\n            textLabel = this.props.textLabel;\r\n        }\r\n\r\n        let startButton = null;\r\n        if (this.props.startButton) {\r\n            if (typeof this.props.startButton === 'string' || typeof this.props.startButton === 'boolean') {\r\n                startButton = <div style={{ display: 'inline-block', }}>\r\n                    <button\r\n                        style={{\r\n                            cursor: this.state.isUploading ? 'pointer' : 'default',\r\n                        }}\r\n                        disabled={this.state.isUploading}\r\n                        className=\"resumable-btn-start btn\"\r\n                        onClick={this.startUpload}>{this.props.startButton && 'upload'}\r\n                    </button>\r\n                </div>;\r\n            }\r\n            else { startButton = this.props.startButton }\r\n        }\r\n\r\n        let cancelButton = null;\r\n        if (this.props.cancelButton && this.state.showEnabledButtons) {\r\n            if (typeof this.props.cancelButton === 'string' ||\r\n                typeof this.props.cancelButton === 'boolean') {\r\n                cancelButton = <div style={{ display: 'inline-block', }}>\r\n                    <button\r\n                        style={{\r\n                            cursor: this.state.isUploading ? 'pointer' : 'default',\r\n                        }}\r\n                        disabled={!this.state.isUploading}\r\n                        className=\"resumable-btn-cancel btn\"\r\n                        onClick={this.cancelUpload}>{this.props.cancelButton && 'cancel'}\r\n                    </button>\r\n                </div>;\r\n            }\r\n            else { cancelButton = this.props.cancelButton }\r\n        }\r\n\r\n        let pauseButton = null;\r\n        if (this.props.pauseButton && this.state.showEnabledButtons) {\r\n            if (typeof this.props.pauseButton === 'string'\r\n                || typeof this.props.pauseButton === 'boolean') {\r\n                pauseButton = <div style={{ display: 'inline-block', }}>\r\n                    <button\r\n                        style={{\r\n                            cursor: this.state.isUploading ? 'pointer' : 'default',\r\n                        }}\r\n                        disabled={!this.state.isUploading}\r\n                        className=\"resumable-btn-pause btn\"\r\n                        onClick={this.pauseUpload}>\r\n                        {this.props.pauseButton\r\n                            && (this.state.isPaused ? 'resume' : 'pause')}\r\n                    </button>\r\n                </div>;\r\n            }\r\n            else { pauseButton = this.props.pauseButton }\r\n        }\r\n\r\n        const getStyle = () => {\r\n            if (this.state.isComplete) {\r\n                return this.props.completeStyle;\r\n            } else if (this.state.isHovered || this.state.isUploading) {\r\n                return this.props.activeStyle;\r\n            }\r\n            return this.props.defaultStyle;\r\n\r\n        }\r\n\r\n        const getClass = () => {\r\n            if (this.props.disabledInput) {\r\n                return this.props.disableClass;\r\n            } else if (this.state.isHovered) {\r\n                return this.props.hoveredClass;\r\n            } else if (this.state.isUploading) {\r\n                return this.props.uploadingClass;\r\n            } else if (this.state.isComplete) {\r\n                return this.props.completeClass;\r\n            } else if (this.state.isPaused) {\r\n                return this.props.completeClass;\r\n            }\r\n            return this.props.className\r\n\r\n        }\r\n\r\n        return (\r\n            <div style={getStyle()} id={this.props.id} className={getClass()} ref={node => this.dropZone = node} >\r\n                <div id={this.props.id + '-padding'}\r\n                    style={{\r\n                        padding: '10px',\r\n                    }}>\r\n                    <label\r\n                        style={{\r\n                            display: 'inline-block',\r\n                            verticalAlign: 'middle', lineHeight: 'normal',\r\n                            width: this.state.isUploading ? 'auto' : '100%',\r\n                            paddingRight: this.state.isUploading ? '10px' : '0',\r\n                            textAlign: 'center', wordWrap: 'break-word',\r\n                            cursor: this.state.isUploading ? 'default' : 'pointer',\r\n                        }}\r\n                        onMouseEnter={this.toggleHovered}\r\n                        onMouseLeave={this.toggleHovered}\r\n                    >\r\n                        {this.state.messageStatus == '' ? textLabel : this.state.messageStatus}\r\n                        <input\r\n                            ref={node => this.uploader = node}\r\n                            type=\"file\"\r\n                            className='btn'\r\n                            name={this.props.id + '-upload'}\r\n                            accept={this.props.fileAccept || '*'}\r\n                            disabled={this.state.isUploading || false}\r\n                            style={{\r\n                                'opacity': '0',\r\n                                'width': '0.1px%',\r\n                                'height': '0.1px%',\r\n                                'position': 'absolute',\r\n                                'overflow': 'hidden',\r\n                                'zIndex': '-1',\r\n                            }}\r\n                        />\r\n                    </label>\r\n                    <div className=\"progress\"\r\n                        style={{\r\n                            display: this.state.isUploading ? 'inline-block' : 'none',\r\n                        }}>\r\n                        <div className=\"progress-bar\"\r\n                            style={{\r\n                                width: this.state.progressBar + '%',\r\n                                height: '100%'\r\n                            }}></div>\r\n                    </div>\r\n                    {fileList}\r\n                    {startButton}\r\n                    {pauseButton}\r\n                    {cancelButton}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nUpload_ReactComponent.propTypes = {\r\n    /**\r\n     * Maximum number of files that can be uploaded in one session\r\n     */\r\n    maxFiles: PropTypes.number,\r\n\r\n    /**\r\n     * Maximum size per file in bytes.\r\n     */\r\n    maxFileSize: PropTypes.number,\r\n\r\n    /**\r\n     * Size of file chunks to send to server.\r\n     */\r\n    chunkSize: PropTypes.number,\r\n\r\n    /**\r\n     * Number of simultaneous uploads to select\r\n     */\r\n    simultaneousUploads: PropTypes.number,\r\n\r\n    /**\r\n     * The service to send the files to\r\n     */\r\n    service: PropTypes.string,\r\n\r\n    /**\r\n     * Class to add to the upload component by default\r\n     */\r\n    className: PropTypes.string,\r\n\r\n    /**\r\n     * Class to add to the upload component when it is hovered\r\n     */\r\n    hoveredClass: PropTypes.string,\r\n\r\n    /**\r\n     * Class to add to the upload component when it is disabled\r\n     */\r\n    disabledClass: PropTypes.string,\r\n\r\n    /**\r\n     * Class to add to the upload component when it is paused\r\n     */\r\n    pausedClass: PropTypes.string,\r\n\r\n    /**\r\n     * Class to add to the upload component when it is complete\r\n     */\r\n    completeClass: PropTypes.string,\r\n\r\n    /**\r\n     * Class to add to the upload component when it is uploading\r\n     */\r\n    uploadingClass: PropTypes.string,\r\n\r\n    /**\r\n     * Style attributes to add to the upload component\r\n     */\r\n    defaultStyle: PropTypes.object,\r\n\r\n    /**\r\n     * Style when upload component is hovered over\r\n     */\r\n    activeStyle: PropTypes.object,\r\n\r\n    /**\r\n     * Style when upload is completed (upload finished)\r\n     */\r\n    completeStyle: PropTypes.object,\r\n\r\n    /**\r\n     * The string to display in the upload component\r\n     */\r\n    textLabel: PropTypes.string,\r\n\r\n    /**\r\n     * Message to display when upload completed\r\n     */\r\n    completedMessage: PropTypes.string,\r\n\r\n    /**\r\n     * The names of the files uploaded\r\n     */\r\n    fileNames: PropTypes.arrayOf(PropTypes.string),\r\n\r\n    /**\r\n     * List of allowed file types, e.g. ['jpg', 'png']\r\n     */\r\n    filetypes: PropTypes.arrayOf(PropTypes.string),\r\n\r\n    /**\r\n     * Whether or not to have a start button\r\n     */\r\n    startButton: PropTypes.bool,\r\n\r\n    /**\r\n     * Whether or not to have a pause button\r\n     */\r\n    pauseButton: PropTypes.bool,\r\n\r\n    /**\r\n     * Whether or not to have a cancel button\r\n     */\r\n    cancelButton: PropTypes.bool,\r\n\r\n    /**\r\n     * Whether or not to allow file drag and drop\r\n     */\r\n    disableDragAndDrop: PropTypes.bool,\r\n\r\n    /**\r\n     * Dash-supplied function for updating props\r\n     */\r\n    setProps: PropTypes.func,\r\n\r\n    /**\r\n     * User supplied id of this component\r\n     */\r\n    id: PropTypes.string,\r\n    /**\r\n     * internal\r\n     */\r\n    // fileAddedMessage: PropTypes.string,\r\n    // onFileAdded: PropTypes.func,\r\n    // fileNameServer: PropTypes.string,\r\n    // onFileSuccess: PropTypes.func,\r\n    // onUploadErrorCallback: PropTypes.func,\r\n    // disabledInput: PropTypes.bool\r\n\r\n\r\n}\r\n\r\nUpload_ReactComponent.defaultProps = {\r\n    maxFiles: 1,\r\n    maxFileSize: 1024 * 1024 * 10,\r\n    chunkSize: 1024 * 1024,\r\n    simultaneuosUploads: 1,\r\n    service: '/API/resumable',\r\n    className: 'resumable-default',\r\n    hoveredClass: 'resumable-hovered',\r\n    completeClass: 'resumable-complete',\r\n    disabledClass: 'resumable-disabled',\r\n    pausedClass: 'resumable-paused',\r\n    uploadingClass: 'resumable-uploading',\r\n    defaultStyle: {},\r\n    activeStyle: {},\r\n    completeStyle: {},\r\n    textLabel: 'Click Here to Select a File',\r\n    completedMessage: 'Complete! ',\r\n    fileNames: [],\r\n    filetypes: undefined,\r\n    startButton: true,\r\n    pauseButton: true,\r\n    cancelButton: true,\r\n    disableDragAndDrop: false,\r\n    id: 'default-uploader-id',\r\n    onUploadErrorCallback: undefined,\r\n};\r\n","/* eslint-disable import/prefer-default-export */\r\nimport Upload_ReactComponent from './components/Upload_ReactComponent.react';\r\n\r\nexport {\r\n    Upload_ReactComponent\r\n};\r\n"],"sourceRoot":""}